    1 MODE 7
    2 REM -------DEFINITIONS-------
    3 BL$=CHR$(255)      :REM BLOCK
    4 NBL$=" "           :REM NO BLOCK
    5 B$=CHR$(8)         :REM CURSOR BACK
    6 F$=CHR$(9)         :REM CURSOR FORWARD
    7 D$=CHR$(10)        :REM CURSOR DOWN
    8 U$=CHR$(11)        :REM CURSOR UP
    9 DIM SET$(3)        :REM SETS CHARACTER BLOCK
   10 DIM NSET$(3)       :REM SETS THE NEGATIVE OF CHARACTER BLOCK
   11 DIM SETHB$(3,3,3)  :REM DEFINES SET BLOCKS HIT BOX
   12 DIM SCREEN$(14,21) :REM SCREEN ARRAY SIZE
   13 X=0 : Y=0 : R=0 : COL=FALSE : THISREMOVEDLINE%=0 : TMP$=BL$ :REM PLAYER X,Y,R / COLLISION / CURSOR LINE REMOVE
   14 SCORE%=0 : TIME=0 : T%=TIME : LEAVE=FALSE :REM SCORE / TIME / DELAY TIME / LEAVE
   15 RATE%=45                                  :REM SET CLOCK TICK RATE
   16 REM -------COLOUR-DEFINITIONS-------
   17 L$=CHR$(141) : ST$=CHR$(137): FL$=CHR$(136):REM L$-D-HEIGHT / ST$-STEADY / FL$-BLINK
   18 GR$=CHR$(145): W$=CHR$(135)                :REM GR$-G-RED   / W$-T-WHITE /
   19 Y$=CHR$(131) : GL$=CHR$(132): M$=CHR$(133) :REM Y$-T-YELLOW / GL$-T-BLUE / M$-T-MAGENTA
   20 C$=CHR$(134) : G$=CHR$(130) : R$=CHR$(129) :REM C$-T-CYAN   / G$-T-GREEN / R$-T-RED
   21 DIM CL$(17)  :DIM CLX$(17) : CLXS=0 : CLP$="NA" :REM COLOUR SET
   22 REM -------ARENA-WALLS-N-CLS-NEXT-BLOCK-------
   23 FOR YA=0 TO 18 : SCREEN$(12,YA)=BL$ : NEXT YA
   24 FOR YA=0 TO 18 : SCREEN$(0,YA)=BL$ : NEXT YA
   25 FOR XA=1 TO 11 : SCREEN$(XA,18)=BL$ : NEXT XA
   26 FOR SCL=0 TO 4  : CL$(SCL)=G$ : NEXT SCL
   27 FOR SCL=5 TO 8  : CL$(SCL)=Y$ : NEXT SCL
   28 FOR SCL=9 TO 12 : CL$(SCL)=GL$: NEXT SCL
   29 FOR SCL=13 TO 17: CL$(SCL)=M$ : NEXT SCL
   30 FOR SCL=0 TO 17 : CLX$(SCL)=" ": NEXT SCL
   31 NIT$=NBL$+NBL$+NBL$+NBL$+D$+B$+B$+B$+B$+NBL$+NBL$+NBL$+NBL$+D$+B$+B$+B$+B$+NBL$+NBL$+NBL$+NBL$+D$+B$+B$+B$+B$+NBL$+NBL$+NBL$+NBL$
   32 REM -------BLOCK-DEFINITIONS-------
   33 DIM OBA$(3) :REM O BLOCK
   34 OBA$(0)=BL$+BL$+D$+B$+B$+BL$+BL$
   35 OBA$(1)=BL$+BL$+D$+B$+B$+BL$+BL$             :REM LOOP 01
   36 OBA$(2)=BL$+BL$+D$+B$+B$+BL$+BL$             :REM LOOP 02
   37 OBA$(3)=BL$+BL$+D$+B$+B$+BL$+BL$             :REM LOOP 03
   38 DIM IBA$(3) :REM I BLOCK
   39 IBA$(0)=BL$+D$+B$+BL$+D$+B$+BL$+D$+B$+BL$
   40 IBA$(1)=BL$+BL$+BL$+BL$
   41 IBA$(2)=BL$+D$+B$+BL$+D$+B$+BL$+D$+B$+BL$    :REM LOOP 01
   42 IBA$(3)=BL$+BL$+BL$+BL$                      :REM LOOP 02
   43 DIM SBA$(3) :REM S BLOCK
   44 SBA$(0)=F$+BL$+BL$+D$+B$+B$+B$+BL$+BL$+F$
   45 SBA$(1)=BL$+D$+B$+BL$+BL$+D$+B$+BL$
   46 SBA$(2)=F$+BL$+BL$+D$+B$+B$+B$+BL$+BL$+F$    :REM LOOP 01
   47 SBA$(3)=BL$+D$+B$+BL$+BL$+D$+B$+BL$          :REM LOOP 02
   48 DIM ZBA$(3) :REM Z BLOCK
   49 ZBA$(0)=BL$+BL$+D$+B$+B$+F$+BL$+BL$
   50 ZBA$(1)=F$+BL$+D$+B$+B$+BL$+BL$+D$+B$+B$+BL$
   51 ZBA$(2)=BL$+BL$+D$+B$+B$+F$+BL$+BL$          :REM LOOP 01
   52 ZBA$(3)=F$+BL$+D$+B$+B$+BL$+BL$+D$+B$+B$+BL$ :REM LOOP 02
   53 DIM LBA$(3) :REM L BLOCK
   54 LBA$(0)=BL$+D$+B$+BL$+D$+B$+BL$+BL$
   55 LBA$(1)=BL$+BL$+BL$+D$+B$+B$+B$+BL$
   56 LBA$(2)=BL$+BL$+D$+B$+BL$+D$+B$+BL$
   57 LBA$(3)=F$+F$+BL$+D$+B$+B$+B$+BL$+BL$+BL$
   58 DIM JBA$(3) :REM J BLOCK
   59 JBA$(0)=F$+BL$+D$+B$+BL$+D$+B$+B$+BL$+BL$
   60 JBA$(1)=BL$+D$+B$+BL$+BL$+BL$
   61 JBA$(2)=BL$+BL$+D$+B$+B$+BL$+D$+B$+BL$
   62 JBA$(3)=BL$+BL$+BL$+D$+B$+BL$
   63 DIM TBA$(3) :REM T BLOCK
   64 TBA$(0)=BL$+BL$+BL$+D$+B$+B$+BL$
   65 TBA$(1)=F$+BL$+D$+B$+B$+BL$+BL$+D$+B$+BL$
   66 TBA$(2)=F$+BL$+D$+B$+B$+BL$+BL$+BL$
   67 TBA$(3)=BL$+D$+B$+BL$+BL$+D$+B$+B$+BL$
   68 PRINT"GRAPHIC BLOCKS DEFINED"
   69 REM -------EMPTY-BLOCK-DEFINITIONS-------
   70 DIM EOBA$(3) :REM EMPTY O BLOCK
   71 EOBA$(0)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$
   72 EOBA$(1)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$             :REM LOOP 01
   73 EOBA$(2)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$             :REM LOOP 02
   74 EOBA$(3)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$             :REM LOOP 03
   75 DIM EIBA$(3) :REM EMPTY I BLOCK
   76 EIBA$(0)=NBL$+D$+B$+NBL$+D$+B$+NBL$+D$+B$+NBL$
   77 EIBA$(1)=NBL$+NBL$+NBL$+NBL$
   78 EIBA$(2)=NBL$+D$+B$+NBL$+D$+B$+NBL$+D$+B$+NBL$    :REM LOOP 01
   79 EIBA$(3)=NBL$+NBL$+NBL$+NBL$                      :REM LOOP 02
   80 DIM ESBA$(3) :REM EMPTY S BLOCK
   81 ESBA$(0)=F$+NBL$+NBL$+D$+B$+B$+B$+NBL$+NBL$+F$
   82 ESBA$(1)=NBL$+D$+B$+NBL$+NBL$+D$+B$+NBL$
   83 ESBA$(2)=F$+NBL$+NBL$+D$+B$+B$+B$+NBL$+NBL$+F$    :REM LOOP 01
   84 ESBA$(3)=NBL$+D$+B$+NBL$+NBL$+D$+B$+NBL$          :REM LOOP 02
   85 DIM EZBA$(3) :REM EMPTY Z BLOCK
   86 EZBA$(0)=NBL$+NBL$+D$+B$+B$+F$+NBL$+NBL$
   87 EZBA$(1)=F$+NBL$+D$+B$+B$+NBL$+NBL$+D$+B$+B$+NBL$
   88 EZBA$(2)=NBL$+NBL$+D$+B$+B$+F$+NBL$+NBL$          :REM LOOP 01
   89 EZBA$(3)=F$+NBL$+D$+B$+B$+NBL$+NBL$+D$+B$+B$+NBL$ :REM LOOP 02
   90 DIM ELBA$(3) :REM EMPTY L BLOCK
   91 ELBA$(0)=NBL$+D$+B$+NBL$+D$+B$+NBL$+NBL$
   92 ELBA$(1)=NBL$+NBL$+NBL$+D$+B$+B$+B$+NBL$
   93 ELBA$(2)=NBL$+NBL$+D$+B$+NBL$+D$+B$+NBL$
   94 ELBA$(3)=F$+F$+NBL$+D$+B$+B$+B$+NBL$+NBL$+NBL$
   95 DIM EJBA$(3) :REM EMPTY J BLOCK
   96 EJBA$(0)=F$+NBL$+D$+B$+NBL$+D$+B$+B$+NBL$+NBL$
   97 EJBA$(1)=NBL$+D$+B$+NBL$+NBL$+NBL$
   98 EJBA$(2)=NBL$+NBL$+D$+B$+B$+NBL$+D$+B$+NBL$
   99 EJBA$(3)=NBL$+NBL$+NBL$+D$+B$+NBL$
  100 DIM ETBA$(3) :REM EMPTY T BLOCK
  101 ETBA$(0)=NBL$+NBL$+NBL$+D$+B$+B$+NBL$
  102 ETBA$(1)=F$+NBL$+D$+B$+B$+NBL$+NBL$+D$+B$+NBL$
  103 ETBA$(2)=F$+NBL$+D$+B$+B$+NBL$+NBL$+NBL$
  104 ETBA$(3)=NBL$+D$+B$+NBL$+NBL$+D$+B$+B$+NBL$
  105 PRINT"EMPTY GRAPHIC BLOCKS DEFINED"
  106 REM -------HITBOX-DEFINITIONS-------
  107 DIM OBAH$(3,3,3) :REM I BLOCK HIT BOX
  108 OBAH$(0,0,0)=BL$ :OBAH$(0,1,0)=BL$ :OBAH$(0,0,1)=BL$ :OBAH$(0,1,1)=BL$
  109 OBAH$(1,0,0)=BL$ :OBAH$(1,1,0)=BL$ :OBAH$(1,0,1)=BL$ :OBAH$(1,1,1)=BL$  :REM LOOP 01
  110 OBAH$(2,0,0)=BL$ :OBAH$(2,1,0)=BL$ :OBAH$(2,0,1)=BL$ :OBAH$(2,1,1)=BL$  :REM LOOP 02
  111 OBAH$(3,0,0)=BL$ :OBAH$(3,1,0)=BL$ :OBAH$(3,0,1)=BL$ :OBAH$(3,1,1)=BL$  :REM LOOP 03
  112 DIM IBAH$(3,3,3) :REM I BLOCK HIT BOX
  113 IBAH$(0,0,0)=BL$ :IBAH$(0,0,1)=BL$ :IBAH$(0,0,2)=BL$ :IBAH$(0,0,3)=BL$
  114 IBAH$(1,0,0)=BL$ :IBAH$(1,1,0)=BL$ :IBAH$(1,2,0)=BL$ :IBAH$(1,3,0)=BL$
  115 IBAH$(2,0,0)=BL$ :IBAH$(2,0,1)=BL$ :IBAH$(2,0,2)=BL$ :IBAH$(2,0,3)=BL$  :REM LOOP 01
  116 IBAH$(3,0,0)=BL$ :IBAH$(3,1,0)=BL$ :IBAH$(3,2,0)=BL$ :IBAH$(3,3,0)=BL$  :REM LOOP 02
  117 DIM SBAH$(3,3,3) :REM S BLOCK HIT BOX
  118 SBAH$(0,1,0)=BL$ :SBAH$(0,2,0)=BL$ :SBAH$(0,0,1)=BL$ :SBAH$(0,1,1)=BL$
  119 SBAH$(1,0,0)=BL$ :SBAH$(1,0,1)=BL$ :SBAH$(1,1,1)=BL$ :SBAH$(1,1,2)=BL$
  120 SBAH$(2,1,0)=BL$ :SBAH$(2,2,0)=BL$ :SBAH$(2,0,1)=BL$ :SBAH$(2,1,1)=BL$  :REM LOOP 01
  121 SBAH$(3,0,0)=BL$ :SBAH$(3,0,1)=BL$ :SBAH$(3,1,1)=BL$ :SBAH$(3,1,2)=BL$  :REM LOOP 02
  122 DIM ZBAH$(3,3,3) :REM Z BLOCK HIT BOX
  123 ZBAH$(0,0,0)=BL$ :ZBAH$(0,1,0)=BL$ :ZBAH$(0,1,1)=BL$ :ZBAH$(0,2,1)=BL$
  124 ZBAH$(1,1,0)=BL$ :ZBAH$(1,0,1)=BL$ :ZBAH$(1,1,1)=BL$ :ZBAH$(1,0,2)=BL$
  125 ZBAH$(2,0,0)=BL$ :ZBAH$(2,1,0)=BL$ :ZBAH$(2,1,1)=BL$ :ZBAH$(2,2,1)=BL$  :REM LOOP 01
  126 ZBAH$(3,1,0)=BL$ :ZBAH$(3,0,1)=BL$ :ZBAH$(3,1,1)=BL$ :ZBAH$(3,0,2)=BL$  :REM LOOP 02
  127 DIM LBAH$(3,3,3) :REM L BLOCK HIT BOX
  128 LBAH$(0,0,0)=BL$ :LBAH$(0,0,1)=BL$ :LBAH$(0,0,2)=BL$ :LBAH$(0,1,2)=BL$
  129 LBAH$(1,0,0)=BL$ :LBAH$(1,1,0)=BL$ :LBAH$(1,2,0)=BL$ :LBAH$(1,0,1)=BL$
  130 LBAH$(2,0,0)=BL$ :LBAH$(2,1,0)=BL$ :LBAH$(2,1,1)=BL$ :LBAH$(2,1,2)=BL$
  131 LBAH$(3,2,0)=BL$ :LBAH$(3,0,1)=BL$ :LBAH$(3,1,1)=BL$ :LBAH$(3,2,1)=BL$
  132 DIM JBAH$(3,3,3) :REM J BLOCK HIT BOX
  133 JBAH$(0,1,0)=BL$ :JBAH$(0,1,1)=BL$ :JBAH$(0,0,2)=BL$ :JBAH$(0,1,2)=BL$
  134 JBAH$(1,0,0)=BL$ :JBAH$(1,0,1)=BL$ :JBAH$(1,1,1)=BL$ :JBAH$(1,2,1)=BL$
  135 JBAH$(2,0,0)=BL$ :JBAH$(2,1,0)=BL$ :JBAH$(2,0,1)=BL$ :JBAH$(2,0,2)=BL$
  136 JBAH$(3,0,0)=BL$ :JBAH$(3,1,0)=BL$ :JBAH$(3,2,0)=BL$ :JBAH$(3,2,1)=BL$
  137 DIM TBAH$(3,3,3) :REM T BLOCK HIT BOX
  138 TBAH$(0,0,0)=BL$ :TBAH$(0,1,0)=BL$ :TBAH$(0,2,0)=BL$ :TBAH$(0,1,1)=BL$
  139 TBAH$(1,1,0)=BL$ :TBAH$(1,0,1)=BL$ :TBAH$(1,1,1)=BL$ :TBAH$(1,1,2)=BL$
  140 TBAH$(2,1,0)=BL$ :TBAH$(2,0,1)=BL$ :TBAH$(2,1,1)=BL$ :TBAH$(2,2,1)=BL$
  141 TBAH$(3,0,0)=BL$ :TBAH$(3,0,1)=BL$ :TBAH$(3,1,1)=BL$ :TBAH$(3,0,2)=BL$
  142 PRINT"HIT BOX BLOCKS DEFINED"
  143 REM -------RETURN-------
  144 LEAVE=FALSE : RATE%=45 : COL=FALSE
  145 PROC_Title
  146 REM -------TITLE-LOOP-------
  147 K%=INKEY(0)
  148 IF K%=32 THEN PROC_Start : GOTO 182
  149 IF K%=83 OR K%=115 THEN PROC_Options : GOTO 152
  150 IF K%=76 OR K%=108 THEN PROC_Leave : GOTO 194
  151 GOTO 146
  152 REM -------OPTIONS-LOOP-------
  153 K%=INKEY(0)
  154 IF K%=81 OR K%=113 THEN PROC_BlockListPrint
  155 IF K%=87 OR K%=119 THEN PROC_TickRate : PROC_Options
  156 IF K%=69 OR K%=101 THEN PROC_COLOUR : GOTO 159
  157 IF K%=76 OR K%=108 THEN PROC_Title : GOTO 146
  158 GOTO 152
  159 REM -------COLOUR-LOOP-------
  160 K%=INKEY(0)
  161 IF K%=81 OR K%=113 THEN CLXS=0  : PROC_COLOUR_UPDATE        :REM Q/q
  162 IF K%=65 OR K%=97  THEN CLXS=1  : PROC_COLOUR_UPDATE        :REM A/a
  163 IF K%=90 OR K%=122 THEN CLXS=2  : PROC_COLOUR_UPDATE        :REM Z/z
  164 IF K%=87 OR K%=119 THEN CLXS=3  : PROC_COLOUR_UPDATE        :REM W/w
  165 IF K%=83 OR K%=115 THEN CLXS=4  : PROC_COLOUR_UPDATE        :REM S/s
  166 IF K%=88 OR K%=120 THEN CLXS=5  : PROC_COLOUR_UPDATE        :REM X/x
  167 IF K%=69 OR K%=101 THEN CLXS=6  : PROC_COLOUR_UPDATE        :REM E/e
  168 IF K%=68 OR K%=100 THEN CLXS=7  : PROC_COLOUR_UPDATE        :REM D/d
  169 IF K%=67 OR K%=99  THEN CLXS=8  : PROC_COLOUR_UPDATE        :REM C/c
  170 IF K%=82 OR K%=114 THEN CLXS=9  : PROC_COLOUR_UPDATE        :REM R/r
  171 IF K%=70 OR K%=102 THEN CLXS=10 : PROC_COLOUR_UPDATE        :REM F/f
  172 IF K%=86 OR K%=118 THEN CLXS=11 : PROC_COLOUR_UPDATE        :REM V/v
  173 IF K%=84 OR K%=116 THEN CLXS=12 : PROC_COLOUR_UPDATE        :REM T/t
  174 IF K%=71 OR K%=103 THEN CLXS=13 : PROC_COLOUR_UPDATE        :REM G/g
  175 IF K%=66 OR K%=98  THEN CLXS=14 : PROC_COLOUR_UPDATE        :REM B/b
  176 IF K%=89 OR K%=121 THEN CLXS=15 : PROC_COLOUR_UPDATE        :REM Y/y
  177 IF K%=72 OR K%=104 THEN CLXS=16 : PROC_COLOUR_UPDATE        :REM H/h
  178 IF K%=78 OR K%=110 THEN CLXS=17 : PROC_COLOUR_UPDATE        :REM N/n
  179 IF K%=75 OR K%=107 THEN INPUT CLP$ : PROC_SET_COLOUR_UPDATE :REM K/k SET COLOURS
  180 IF K%=76 OR K%=108 THEN PROC_Options : GOTO 152  :REM L/l TO Options
  181 GOTO 159
  182 REM -------GAME-LOOP-------
  183 REPEAT
  184 K%=INKEY(0)
  185 IF K%=122 OR K%=90 THEN PROC_LEFT    :REM Z/z
  186 IF K%=120 OR K%=88 THEN PROC_RIGHT   :REM X/x
  187 IF K%=111 OR K%=79 THEN PROC_ROTATE  :REM O/o
  188 IF K%=112 OR K%=80 THEN PROC_DROP    :REM P/p
  189 IF K%=76 OR K%=108 THEN LEAVE=TRUE   :REM TO LEAVE
  190 IF TIME>=RATE% THEN TIME=0 : PROC_DOWN
  191 REPEAT UNTIL TIME>=T%+1
  192 UNTIL LEAVE
  193 PROC_END : GOTO 143
  194 REM -------PROGRAM-ENDS-------
  195 END
  196 REM -------PROGRAM-DEFS-------
  197 DEF PROC_Start
  198 PROC_RESET
  199 PROC_UI
  200 PROC_NEXTBLOCK
  201 ENDPROC
  202 DEF PROC_SET
  203 SCORE%=SCORE%+5:PRINTTAB(29,4)CHR$(135)"SCORE:"; SCORE%
  204 FOR SX=0 TO 3:FOR SY=0 TO 3:SCREEN$(SX+X+1,SY+Y)=SCREEN$(SX+X+1,SY+Y)+SETHB$(R,SX,SY)
  205 IF Y<2 THEN LEAVE=TRUE
  206 NEXT SY:NEXT SX
  207 PROC_CHECKREMOVELINE:PROC_NEXTBLOCK:COL=FALSE
  208 ENDPROC
  209 DEF PROC_END
  210 CLS
  211 PRINTTAB(20,10) SCORE%
  212 PRINTTAB(13,0)L$Y$"PEDAIR--O":PRINTTAB(13,1)L$M$"PEDAIR--O" :REM TITLE
  213 PRINTTAB(13,6);L$R$"GAME OVER" : PRINTTAB(13,7);L$R$"GAME OVER"
  214 PRINTTAB(9,10)"Your Score Was: "
  215 PRINTTAB(5,21)"L - TO GO BACK TO MAIN MENU"
  216 REPEAT
  217 K%=INKEY(0)
  218 IF K%=76 OR K%=108 THEN COL=TRUE
  219 UNTIL COL
  220 ENDPROC
  221 DEF PROC_DROP
  222 PRINTTAB(X+14,Y+3)NSET$(R)
  223 COL=FALSE
  224 REPEAT
  225 FOR SX=0 TO 3:FOR SY=0 TO 3:TMP$=SETHB$(R,SX,SY):IF TMP$=BL$:IF TMP$=SCREEN$(SX+X+1,SY+Y+1) THEN COL=TRUE :REM Collision Check
  226 NEXT SY : NEXT SX
  227 IF COL=FALSE THEN Y=Y+1
  228 UNTIL COL
  229 PRINTTAB(X+14,Y+3)SET$(R)
  230 PROC_SET
  231 ENDPROC
  232 DEF PROC_LEFT
  233 FOR SX=0 TO 3:FOR SY=0 TO 3:TMP$=SETHB$(R,SX,SY):IF TMP$=BL$:IF TMP$=SCREEN$(SX+X,SY+Y) THEN COL=TRUE :REM Collision Check
  234 NEXT SY:NEXT SX
  235 IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R):X=X-1:PRINTTAB(X+14,Y+3)SET$(R):ENDPROC:REM Collision Failed
  236 COL=FALSE
  237 ENDPROC
  238 DEF PROC_RIGHT
  239 FOR SX=0 TO 3:FOR SY=0 TO 3:TMP$=SETHB$(R,SX,SY):IF TMP$=BL$:IF TMP$=SCREEN$(SX+X+2,SY+Y) THEN COL=TRUE :REM Collision Check
  240 NEXT SY:NEXT SX
  241 IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R):X=X+1:PRINTTAB(X+14,Y+3)SET$(R):ENDPROC:REM Collision Failed
  242 COL=FALSE
  243 ENDPROC
  244 DEF PROC_ROTATE
  245 TR=R+1 : IF TR>3 THEN TR=0
  246 FOR SX=0 TO 3:FOR SY=0 TO 3:TMP$=SETHB$(TR,SX,SY):IF TMP$=BL$:IF TMP$=SCREEN$(SX+X+1,SY+Y) THEN COL=TRUE :REM Collision Check
  247 NEXT SY:NEXT SX
  248 IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R):R=TR:PRINTTAB(X+14,Y+3)SET$(R):ENDPROC:REM Collision Failed
  249 COL=FALSE
  250 ENDPROC
  251 DEF PROC_DOWN
  252 FOR SX=0 TO 3:FOR SY=0 TO 3:TMP$=SETHB$(R,SX,SY):IF TMP$=BL$:IF TMP$=SCREEN$(SX+X+1,SY+Y+1) THEN COL=TRUE :REM Collision Check
  253 NEXT SY : NEXT SX
  254 IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R):Y=Y+1:PRINTTAB(X+14,Y+3)SET$(R) :REM Collision Failed
  255 IF COL=TRUE THEN PROC_SET
  256 ENDPROC
  257 DEF PROC_CHECKREMOVELINE
  258 COL=TRUE : THISREMOVEDLINE%=0 :REM CHECK FOR LINE IS FULL AND SAVING WHAT LINE IS TO BE REMOVED
  259 FOR YA=17 TO 0 STEP -1
  260 FOR XA=0 TO 10
  261 IF COL=TRUE THEN IF SCREEN$(XA+1,YA)<>BL$ THEN COL=FALSE
  262 NEXT XA
  263 IF COL=TRUE THEN : IF THISREMOVEDLINE%<YA THEN THISREMOVEDLINE%=YA
  264 COL=TRUE : NEXT YA
  265 IF THISREMOVEDLINE%<>0 THEN SCORE%=SCORE%+35 : PROC_REMOVELINE
  266 ENDPROC
  267 DEF PROC_REMOVELINE
  268 FOR YA=THISREMOVEDLINE% TO 1 STEP -1
  269 FOR XA=0 TO 10
  270 SCREEN$(XA+1,YA)=SCREEN$(XA+1,YA-1)
  271 NEXT XA
  272 NEXT YA
  273 FOR SX=1 TO 11 : FOR SY=0 TO 17 : PRINTTAB(SX+13,SY+3) NBL$ : PRINTTAB(SX+13,SY+3) SCREEN$(SX,SY) : NEXT SY : NEXT SX
  274 PRINTTAB(29,4)CHR$(135)"SCORE:"; SCORE%
  275 PROC_CHECKREMOVELINE:RATE%=RATE%-1
  276 ENDPROC
  277 DEF PROC_UI
  278 CLS
  279 FOR W=3 TO 20 : PRINTTAB(12,W)BL$ : NEXT W            :REM LEFT WALL RENDER
  280 FOR W=3 TO 20 : PRINTTAB(26,W)BL$ : NEXT W            :REM RIGHT WALL RENDER
  281 FOR W=12 TO 26 : PRINTTAB(W,21)BL$ : NEXT W           :REM BOTTOM WALL RENDER
  282 FOR W=3 TO 21 : PRINTTAB(11,W)GR$ : NEXT W            :REM LEFT AND BOTTOM GRAPHICS RENDER
  283 FOR W=3 TO 20 : PRINTTAB(25,W)GR$ : NEXT W            :REM RIGHT GRAPHICS RENDER
  284 FOR SCL=0 TO 17 : PRINTTAB(13,SCL+3)CL$(SCL):NEXT SCL :REM COLOURS RENDER
  285 FOR W=6 TO 11 : PRINTTAB(30,W)BL$ : NEXT W            :REM LEFT WALL NEXT RENDER
  286 FOR W=6 TO 11 : PRINTTAB(37,W)BL$ : NEXT W            :REM RIGHT WALL NEXT RENDER
  287 FOR W=30 TO 37 : PRINTTAB(W,12)BL$ : NEXT W           :REM BOTTOM WALL NEXT RENDER
  288 FOR W=6 TO 10 : PRINTTAB(36,W)GR$ : NEXT W            :REM RIGHT GRAPHICS NEXT RENDER
  289 FOR W=6 TO 10 : PRINTTAB(31,W)W$ : NEXT W             :REM LEFT GRAPHICS NEXT RENDER
  290 PRINTTAB(13,0)L$Y$"PEDAIR--O":PRINTTAB(13,1)L$M$"PEDAIR--O" :REM TITLE
  291 PRINTTAB(29,4)W$"SCORE:0" : PRINTTAB(30,13)W$"NEXT :"       :REM SCORE & NEXT TEXT
  292 PRINTTAB(0,6)C$"Controls:"
  293 PRINTTAB(1,8)"Z = LEFT"
  294 PRINTTAB(1,10)"X = RIGHT"
  295 PRINTTAB(1,12)"O = ROTATE"
  296 PRINTTAB(1,14)"P = DROP"
  297 PRINTTAB(1,16)"L = LEAVE"
  298 ENDPROC
  299 DEF PROC_RESET
  300 X=4 : Y=0 : R=RND(4)-1 : SCORE%=0 : RAND%=RND(7)
  301 FOR YA=0 TO 17 : FOR XA=0 TO 10 : SCREEN$(XA+1,YA)=SCREEN$(14,21) : NEXT XA : NEXT YA
  302 ENDPROC
  303 DEF PROC_NEXTBLOCK
  304 IF RAND% = 1 THEN FOR S=0 TO 3 : SET$(S)=OBA$(S) : NSET$(S)=EOBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=OBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM O BLOCK
  305 IF RAND% = 2 THEN FOR S=0 TO 3 : SET$(S)=TBA$(S) : NSET$(S)=ETBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=TBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM T BLOCK
  306 IF RAND% = 3 THEN FOR S=0 TO 3 : SET$(S)=SBA$(S) : NSET$(S)=ESBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=SBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM S BLOCK
  307 IF RAND% = 4 THEN FOR S=0 TO 3 : SET$(S)=ZBA$(S) : NSET$(S)=EZBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=ZBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM Z BLOCK
  308 IF RAND% = 5 THEN FOR S=0 TO 3 : SET$(S)=LBA$(S) : NSET$(S)=ELBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=LBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM L BLOCK
  309 IF RAND% = 6 THEN FOR S=0 TO 3 : SET$(S)=JBA$(S) : NSET$(S)=EJBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=JBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM J BLOCK
  310 IF RAND% = 7 THEN FOR S=0 TO 3 : SET$(S)=IBA$(S) : NSET$(S)=EIBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=IBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM I BLOCK
  311 RAND%=RND(7)
  312 PRINTTAB(32,7)NIT$
  313 IF RAND% = 1 THEN PRINTTAB(32,7)OBA$(0)
  314 IF RAND% = 2 THEN PRINTTAB(32,7)TBA$(0)
  315 IF RAND% = 3 THEN PRINTTAB(32,7)SBA$(0)
  316 IF RAND% = 4 THEN PRINTTAB(32,7)ZBA$(0)
  317 IF RAND% = 5 THEN PRINTTAB(32,7)LBA$(0)
  318 IF RAND% = 6 THEN PRINTTAB(32,7)JBA$(0)
  319 IF RAND% = 7 THEN PRINTTAB(32,7)IBA$(0)
  320 X=4 : Y=0 : R=RND(4)-1
  321 ENDPROC
  322 DEF PROC_SET_COLOUR_UPDATE
  323 IF CLP$="G" THEN CLP$=G$
  324 IF CLP$="Y" THEN CLP$=Y$
  325 IF CLP$="B" THEN CLP$=GL$
  326 IF CLP$="M" THEN CLP$=M$
  327 IF CLP$="C" THEN CLP$=C$
  328 IF CLP$="R" THEN CLP$=R$
  329 IF CLP$<>G$ AND CLP$<>Y$ AND CLP$<>GL$ AND CLP$<>M$ AND CLP$<>C$ AND CLP$<>R$ THEN CLP$=W$
  330 FOR YA=0 TO 17 : IF CLX$(YA)="X" THEN CL$(YA)=CLP$ : CLX$(YA)=NBL$
  331 NEXT YA
  332 PROC_COLOUR
  333 ENDPROC
  334 DEF PROC_COLOUR_UPDATE
  335 IF CLX$(CLXS)=NBL$ THEN CLX$(CLXS)="X" ELSEIF CLX$(CLXS)="X" THEN CLX$(CLXS)=" "
  336 FOR YA=0 TO 17 : PRINTTAB(16,YA+3)CLX$(YA) : NEXT YA
  337 ENDPROC
  338 DEF PROC_COLOUR
  339 CLS
  340 PRINTTAB(13,0)L$Y$"PEDAIR--O" : PRINTTAB(13,1)L$M$"PEDAIR--O"
  341 FOR SCL=0 TO 17 : PRINTTAB(18,SCL+3)CL$(SCL)BL$ : NEXT SCL
  342 PRINTTAB(22,20)"N":PRINTTAB(22,19)"H":PRINTTAB(22,18)"Y":PRINTTAB(22,17)"B":PRINTTAB(22,16)"G":PRINTTAB(22,15)"T"
  343 PRINTTAB(22,14)"V":PRINTTAB(22,13)"F":PRINTTAB(22,12)"R":PRINTTAB(22,11)"C":PRINTTAB(22,10)"D":PRINTTAB(22,09)"E"
  344 PRINTTAB(22,08)"X":PRINTTAB(22,07)"S":PRINTTAB(22,06)"W":PRINTTAB(22,05)"Z":PRINTTAB(22,04)"A":PRINTTAB(22,03)"Q"
  345 PRINTTAB(2,3)"K - SET" : PRINTTAB(2,5)"L - MAIN MENU"
  346 PRINTTAB(2,8)"W - WHITE" : PRINTTAB(2,10)"G - GREEN"
  347 PRINTTAB(2,12)"Y - YELLO" : PRINTTAB(2,14)"B - BLUE"
  348 PRINTTAB(2,16)"M - MAGENTA" : PRINTTAB(2,18)"C - CYAN"
  349 PRINTTAB(2,20)"R - RED"
  350 ENDPROC
  351 DEF PROC_BlockListPrint
  352 CLS
  353 PRINTTAB(0,0)OBA$(0) ; :PRINT " BLOCK O"
  354 PRINTTAB(20,0)TBA$(0); :PRINT " BLOCK T"
  355 PRINTTAB(0,5)SBA$(0) ; :PRINT " BLOCK S"
  356 PRINTTAB(20,5)ZBA$(0); :PRINT " BLOCK Z"
  357 PRINTTAB(0,10)LBA$(0); :PRINT " BLOCK L"
  358 PRINTTAB(20,10)JBA$(0); :PRINT " BLOCK J"
  359 PRINTTAB(0,15)IBA$(0); :PRINT " BLOCK I"
  360 PRINTTAB(5,21)"L - TO GO BACK TO MAIN MENU"
  361 ENDPROC
  362 DEF PROC_TickRate
  363 CLS
  364 PRINTTAB(13,0)L$Y$"PEDAIR--O" : PRINTTAB(13,1)L$M$"PEDAIR--O"
  365 PRINTTAB(2,3) R$"Difficulty Options for PEDAIR-O:"
  366 PRINTTAB(13,6)"__"
  367 PRINTTAB(2,8)"40 = EASY"
  368 PRINTTAB(2,10)"20 = NORMAL"
  369 PRINTTAB(2,12)"2 = HARD"
  370 PRINTTAB(2,5)" ":INPUT "ENDER SPEED",SPEED%
  371 RATE%=SPEED% : IF SPEED%=0 THEN RATE%=20
  372 ENDPROC
  373 DEF PROC_Options
  374 CLS
  375 PRINTTAB(13,0)L$Y$"PEDAIR--O" : PRINTTAB(13,1)L$M$"PEDAIR--O"
  376 PRINTTAB(2,3) R$"Options for PEDAIR-O:"
  377 PRINTTAB(2,5)"Q - Show a List Of Shapes"
  378 PRINTTAB(2,7)"W - Change Difficulty/Game Speed: "
  379 PRINTTAB(6,8)"The Speed is:" ; :PRINT RATE%
  380 PRINTTAB(2,10)"E - Change Brick Colours: "
  381 PRINTTAB(6,11)"The Colours are: ""Rainbow"""
  382 PRINTTAB(5,21)"L - TO GO BACK TO MAIN MENU"
  383 ENDPROC
  384 DEF PROC_Leave
  385 CLS
  386 PRINTTAB(4,5)"THANK YOU FOR PLAYING MY GAME ^^"
  387 PRINTTAB(9,10)"MAKE BY"; : PRINT R$"Dunvant_Kai"
  388 PRINTTAB(9,20)LBA$(0)
  389 ENDPROC
  390 DEF PROC_Title
  391 CLS
  392 PRINTTAB(9,0) L$Y$"CROESO I PEDAIR-O" : PRINTTAB(9,1)L$M$"CROESO I PEDAIR-O"
  393 PRINTTAB(2,3) R$"Options for PEDAIR-O:"
  394 PRINTTAB(2,5)"S - Show Game Options"
  395 PRINTTAB(2,7) GL$"Controls:"
  396 PRINTTAB(2,9) "Z - To Move Left"
  397 PRINTTAB(2,11) "X - To Move Right"
  398 PRINTTAB(2,13) "O - To Rotate" : PRINTTAB(2,15) "P - To Drop"
  399 PRINTTAB(2,18) FL$"SPACE" ; :PRINT ST$"- To Start The Game"
  400 PRINTTAB(7,20) "L - To Exit From Game" : PRINTTAB(9,22)"MADE BY" ; : PRINT R$"Dunvant_Kai"
  401 ENDPROC
