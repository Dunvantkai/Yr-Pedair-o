MODE 7
REM -------DEFINITIONS-------
BL$=CHR$(255)      :REM BLOCK
NBL$=" "           :REM NO BLOCK
B$=CHR$(8)         :REM CURSOR BACK
F$=CHR$(9)         :REM CURSOR FORWARD
D$=CHR$(10)        :REM CURSOR DOWN
U$=CHR$(11)        :REM CURSOR UP
DIM SET$(3)        :REM SETS CHARACTER BLOCK 
DIM NSET$(3)       :REM SETS THE NEGATIVE OF CHARACTER BLOCK
DIM SETHB$(3,3,3)  :REM DEFINES SET BLOCKS HIT BOX
DIM SCREEN$(14,21) :REM SCREEN ARRAY SIZE
X=0 : Y=0 : R=0 : COL=FALSE : THISREMOVEDLINE%=0 : TMP$=BL$ :REM PLAYER X,Y,R / COLLISION / CURSOR LINE REMOVE  
SCORE%=0 : TIME=0 : T%=TIME : LEAVE=FALSE :REM SCORE / TIME / DELAY TIME / LEAVE
RATE%=20                                  :REM SET CLOCK TICK RATE
REM -------COLOUR-DEFINITIONS-------
L$=CHR$(141) : ST$=CHR$(137): FL$=CHR$(136):REM L$-D-HEIGHT / ST$-STEADY / FL$-BLINK
GR$=CHR$(145): W$=CHR$(135)                :REM GR$-G-RED   / W$-T-WHITE /
Y$=CHR$(131) : GL$=CHR$(132): M$=CHR$(133) :REM Y$-T-YELLOW / GL$-T-BLUE / M$-T-MAGENTA
C$=CHR$(134) : G$=CHR$(130) : R$=CHR$(129) :REM C$-T-CYAN   / G$-T-GREEN / R$-T-RED
DIM CL$(17)  :DIM CLX$(17) : CLXS=0 : CLP$="NA" :REM COLOUR SET 
REM -------ARENA-WALLS-N-CLS-NEXT-BLOCK-------
FOR YA=0 TO 18 : SCREEN$(12,YA)=BL$ : NEXT YA
FOR YA=0 TO 18 : SCREEN$(0,YA)=BL$ : NEXT YA
FOR XA=1 TO 11 : SCREEN$(XA,17)=BL$ : NEXT XA
FOR SCL=0 TO 4  : CL$(SCL)=G$ : NEXT SCL
FOR SCL=5 TO 8  : CL$(SCL)=Y$ : NEXT SCL
FOR SCL=9 TO 12 : CL$(SCL)=GL$: NEXT SCL
FOR SCL=13 TO 17: CL$(SCL)=M$ : NEXT SCL
FOR SCL=0 TO 17 : CLX$(SCL)=" ": NEXT SCL 
NIT$=NBL$+NBL$+NBL$+NBL$+D$+B$+B$+B$+B$+NBL$+NBL$+NBL$+NBL$+D$+B$+B$+B$+B$+NBL$+NBL$+NBL$+NBL$+D$+B$+B$+B$+B$+NBL$+NBL$+NBL$+NBL$
REM -------BLOCK-DEFINITIONS-------
DIM OBA$(3) :REM O BLOCK
OBA$(0)=BL$+BL$+D$+B$+B$+BL$+BL$
OBA$(1)=BL$+BL$+D$+B$+B$+BL$+BL$             :REM LOOP 01
OBA$(2)=BL$+BL$+D$+B$+B$+BL$+BL$             :REM LOOP 02
OBA$(3)=BL$+BL$+D$+B$+B$+BL$+BL$             :REM LOOP 03
DIM IBA$(3) :REM I BLOCK
IBA$(0)=BL$+D$+B$+BL$+D$+B$+BL$+D$+B$+BL$
IBA$(1)=BL$+BL$+BL$+BL$
IBA$(2)=BL$+D$+B$+BL$+D$+B$+BL$+D$+B$+BL$    :REM LOOP 01
IBA$(3)=BL$+BL$+BL$+BL$                      :REM LOOP 02
DIM SBA$(3) :REM S BLOCK
SBA$(0)=F$+BL$+BL$+D$+B$+B$+B$+BL$+BL$+F$
SBA$(1)=BL$+D$+B$+BL$+BL$+D$+B$+BL$
SBA$(2)=F$+BL$+BL$+D$+B$+B$+B$+BL$+BL$+F$    :REM LOOP 01
SBA$(3)=BL$+D$+B$+BL$+BL$+D$+B$+BL$          :REM LOOP 02
DIM ZBA$(3) :REM Z BLOCK
ZBA$(0)=BL$+BL$+D$+B$+B$+F$+BL$+BL$
ZBA$(1)=F$+BL$+D$+B$+B$+BL$+BL$+D$+B$+B$+BL$
ZBA$(2)=BL$+BL$+D$+B$+B$+F$+BL$+BL$          :REM LOOP 01
ZBA$(3)=F$+BL$+D$+B$+B$+BL$+BL$+D$+B$+B$+BL$ :REM LOOP 02
DIM LBA$(3) :REM L BLOCK
LBA$(0)=BL$+D$+B$+BL$+D$+B$+BL$+BL$
LBA$(1)=BL$+BL$+BL$+D$+B$+B$+B$+BL$
LBA$(2)=BL$+BL$+D$+B$+BL$+D$+B$+BL$
LBA$(3)=F$+F$+BL$+D$+B$+B$+B$+BL$+BL$+BL$
DIM JBA$(3) :REM J BLOCK
JBA$(0)=F$+BL$+D$+B$+BL$+D$+B$+B$+BL$+BL$
JBA$(1)=BL$+D$+B$+BL$+BL$+BL$
JBA$(2)=BL$+BL$+D$+B$+B$+BL$+D$+B$+BL$
JBA$(3)=BL$+BL$+BL$+D$+B$+BL$
DIM TBA$(3) :REM T BLOCK
TBA$(0)=BL$+BL$+BL$+D$+B$+B$+BL$
TBA$(1)=F$+BL$+D$+B$+B$+BL$+BL$+D$+B$+BL$
TBA$(2)=F$+BL$+D$+B$+B$+BL$+BL$+BL$
TBA$(3)=BL$+D$+B$+BL$+BL$+D$+B$+B$+BL$
PRINT"GRAPHIC BLOCKS DEFINED"
REM -------EMPTY-BLOCK-DEFINITIONS-------
DIM EOBA$(3) :REM EMPTY O BLOCK
EOBA$(0)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$
EOBA$(1)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$             :REM LOOP 01
EOBA$(2)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$             :REM LOOP 02
EOBA$(3)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$             :REM LOOP 03
DIM EIBA$(3) :REM EMPTY I BLOCK
EIBA$(0)=NBL$+D$+B$+NBL$+D$+B$+NBL$+D$+B$+NBL$
EIBA$(1)=NBL$+NBL$+NBL$+NBL$
EIBA$(2)=NBL$+D$+B$+NBL$+D$+B$+NBL$+D$+B$+NBL$    :REM LOOP 01
EIBA$(3)=NBL$+NBL$+NBL$+NBL$                      :REM LOOP 02
DIM ESBA$(3) :REM EMPTY S BLOCK
ESBA$(0)=F$+NBL$+NBL$+D$+B$+B$+B$+NBL$+NBL$+F$
ESBA$(1)=NBL$+D$+B$+NBL$+NBL$+D$+B$+NBL$
ESBA$(2)=F$+NBL$+NBL$+D$+B$+B$+B$+NBL$+NBL$+F$    :REM LOOP 01
ESBA$(3)=NBL$+D$+B$+NBL$+NBL$+D$+B$+NBL$          :REM LOOP 02
DIM EZBA$(3) :REM EMPTY Z BLOCK
EZBA$(0)=NBL$+NBL$+D$+B$+B$+F$+NBL$+NBL$
EZBA$(1)=F$+NBL$+D$+B$+B$+NBL$+NBL$+D$+B$+B$+NBL$
EZBA$(2)=NBL$+NBL$+D$+B$+B$+F$+NBL$+NBL$          :REM LOOP 01
EZBA$(3)=F$+NBL$+D$+B$+B$+NBL$+NBL$+D$+B$+B$+NBL$ :REM LOOP 02
DIM ELBA$(3) :REM EMPTY L BLOCK
ELBA$(0)=NBL$+D$+B$+NBL$+D$+B$+NBL$+NBL$
ELBA$(1)=NBL$+NBL$+NBL$+D$+B$+B$+B$+NBL$
ELBA$(2)=NBL$+NBL$+D$+B$+NBL$+D$+B$+NBL$
ELBA$(3)=F$+F$+NBL$+D$+B$+B$+B$+NBL$+NBL$+NBL$
DIM EJBA$(3) :REM EMPTY J BLOCK
EJBA$(0)=F$+NBL$+D$+B$+NBL$+D$+B$+B$+NBL$+NBL$
EJBA$(1)=NBL$+D$+B$+NBL$+NBL$+NBL$
EJBA$(2)=NBL$+NBL$+D$+B$+B$+NBL$+D$+B$+NBL$
EJBA$(3)=NBL$+NBL$+NBL$+D$+B$+NBL$
DIM ETBA$(3) :REM EMPTY T BLOCK
ETBA$(0)=NBL$+NBL$+NBL$+D$+B$+B$+NBL$
ETBA$(1)=F$+NBL$+D$+B$+B$+NBL$+NBL$+D$+B$+NBL$
ETBA$(2)=F$+NBL$+D$+B$+B$+NBL$+NBL$+NBL$
ETBA$(3)=NBL$+D$+B$+NBL$+NBL$+D$+B$+B$+NBL$
PRINT"EMPTY GRAPHIC BLOCKS DEFINED"
REM -------HITBOX-DEFINITIONS-------
DIM OBAH$(3,3,3) :REM I BLOCK HIT BOX
OBAH$(0,0,0)=BL$ :OBAH$(0,1,0)=BL$ :OBAH$(0,0,1)=BL$ :OBAH$(0,1,1)=BL$
OBAH$(1,0,0)=BL$ :OBAH$(1,1,0)=BL$ :OBAH$(1,0,1)=BL$ :OBAH$(1,1,1)=BL$  :REM LOOP 01
OBAH$(2,0,0)=BL$ :OBAH$(2,1,0)=BL$ :OBAH$(2,0,1)=BL$ :OBAH$(2,1,1)=BL$  :REM LOOP 02
OBAH$(3,0,0)=BL$ :OBAH$(3,1,0)=BL$ :OBAH$(3,0,1)=BL$ :OBAH$(3,1,1)=BL$  :REM LOOP 03
DIM IBAH$(3,3,3) :REM I BLOCK HIT BOX
IBAH$(0,0,0)=BL$ :IBAH$(0,0,1)=BL$ :IBAH$(0,0,2)=BL$ :IBAH$(0,0,3)=BL$
IBAH$(1,0,0)=BL$ :IBAH$(1,1,0)=BL$ :IBAH$(1,2,0)=BL$ :IBAH$(1,3,0)=BL$
IBAH$(2,0,0)=BL$ :IBAH$(2,0,1)=BL$ :IBAH$(2,0,2)=BL$ :IBAH$(2,0,3)=BL$  :REM LOOP 01
IBAH$(3,0,0)=BL$ :IBAH$(3,1,0)=BL$ :IBAH$(3,2,0)=BL$ :IBAH$(3,3,0)=BL$  :REM LOOP 02
DIM SBAH$(3,3,3) :REM S BLOCK HIT BOX
SBAH$(0,1,0)=BL$ :SBAH$(0,2,0)=BL$ :SBAH$(0,0,1)=BL$ :SBAH$(0,1,1)=BL$
SBAH$(1,0,0)=BL$ :SBAH$(1,0,1)=BL$ :SBAH$(1,1,1)=BL$ :SBAH$(1,1,2)=BL$
SBAH$(2,1,0)=BL$ :SBAH$(2,2,0)=BL$ :SBAH$(2,0,1)=BL$ :SBAH$(2,1,1)=BL$  :REM LOOP 01
SBAH$(3,0,0)=BL$ :SBAH$(3,0,1)=BL$ :SBAH$(3,1,1)=BL$ :SBAH$(3,1,2)=BL$  :REM LOOP 02
DIM ZBAH$(3,3,3) :REM Z BLOCK HIT BOX
ZBAH$(0,0,0)=BL$ :ZBAH$(0,1,0)=BL$ :ZBAH$(0,1,1)=BL$ :ZBAH$(0,2,1)=BL$
ZBAH$(1,1,0)=BL$ :ZBAH$(1,0,1)=BL$ :ZBAH$(1,1,1)=BL$ :ZBAH$(1,0,2)=BL$
ZBAH$(2,0,0)=BL$ :ZBAH$(2,1,0)=BL$ :ZBAH$(2,1,1)=BL$ :ZBAH$(2,2,1)=BL$  :REM LOOP 01
ZBAH$(3,1,0)=BL$ :ZBAH$(3,0,1)=BL$ :ZBAH$(3,1,1)=BL$ :ZBAH$(3,0,2)=BL$  :REM LOOP 02
DIM LBAH$(3,3,3) :REM L BLOCK HIT BOX
LBAH$(0,0,0)=BL$ :LBAH$(0,0,1)=BL$ :LBAH$(0,0,2)=BL$ :LBAH$(0,1,2)=BL$
LBAH$(1,0,0)=BL$ :LBAH$(1,1,0)=BL$ :LBAH$(1,2,0)=BL$ :LBAH$(1,0,1)=BL$
LBAH$(2,0,0)=BL$ :LBAH$(2,1,0)=BL$ :LBAH$(2,1,1)=BL$ :LBAH$(2,1,2)=BL$
LBAH$(3,2,0)=BL$ :LBAH$(3,0,1)=BL$ :LBAH$(3,1,1)=BL$ :LBAH$(3,2,1)=BL$
DIM JBAH$(3,3,3) :REM J BLOCK HIT BOX
JBAH$(0,1,0)=BL$ :JBAH$(0,1,1)=BL$ :JBAH$(0,0,2)=BL$ :JBAH$(0,1,2)=BL$
JBAH$(1,0,0)=BL$ :JBAH$(1,0,1)=BL$ :JBAH$(1,1,1)=BL$ :JBAH$(1,2,1)=BL$
JBAH$(2,0,0)=BL$ :JBAH$(2,1,0)=BL$ :JBAH$(2,0,1)=BL$ :JBAH$(2,0,2)=BL$
JBAH$(3,0,0)=BL$ :JBAH$(3,1,0)=BL$ :JBAH$(3,2,0)=BL$ :JBAH$(3,2,1)=BL$
DIM TBAH$(3,3,3) :REM T BLOCK HIT BOX
TBAH$(0,0,0)=BL$ :TBAH$(0,1,0)=BL$ :TBAH$(0,2,0)=BL$ :TBAH$(0,1,1)=BL$
TBAH$(1,1,0)=BL$ :TBAH$(1,0,1)=BL$ :TBAH$(1,1,1)=BL$ :TBAH$(1,1,2)=BL$
TBAH$(2,1,0)=BL$ :TBAH$(2,0,1)=BL$ :TBAH$(2,1,1)=BL$ :TBAH$(2,2,1)=BL$
TBAH$(3,0,0)=BL$ :TBAH$(3,0,1)=BL$ :TBAH$(3,1,1)=BL$ :TBAH$(3,0,2)=BL$
PRINT"HIT BOX BLOCKS DEFINED"
REM -------QETURN-------
LEAVE=FALSE
PROC_Title
REM -------QITLE-LOOP-------
K%=INKEY(0)
IF K%=32 THEN PROC_Start : GOTO """QAME-LOOP"""
IF K%=83 OR K%=115 THEN PROC_Options : GOTO """OPTIONS-LOOP"""
IF K%=76 OR K%=108 THEN PROC_Leave : GOTO """PROGRAM-ENDS"""
GOTO """QITLE-LOOP"""
REM -------OPTIONS-LOOP-------
K%=INKEY(0)
IF K%=81 OR K%=113 THEN PROC_BlockListPrint
IF K%=87 OR K%=119 THEN PROC_TickRate : PROC_Options 
IF K%=69 OR K%=101 THEN PROC_COLOUR : GOTO """QOLOUR-LOOP"""
IF K%=76 OR K%=108 THEN PROC_Title : GOTO """QITLE-LOOP"""
GOTO """OPTIONS-LOOP"""
REM -------QOLOUR-LOOP-------
K%=INKEY(0)
IF K%=81 OR K%=113 THEN CLXS=0  : PROC_COLOUR_UPDATE        :REM Q/q
IF K%=65 OR K%=97  THEN CLXS=1  : PROC_COLOUR_UPDATE        :REM A/a
IF K%=90 OR K%=122 THEN CLXS=2  : PROC_COLOUR_UPDATE        :REM Z/z
IF K%=87 OR K%=119 THEN CLXS=3  : PROC_COLOUR_UPDATE        :REM W/w
IF K%=83 OR K%=115 THEN CLXS=4  : PROC_COLOUR_UPDATE        :REM S/s
IF K%=88 OR K%=120 THEN CLXS=5  : PROC_COLOUR_UPDATE        :REM X/x
IF K%=69 OR K%=101 THEN CLXS=6  : PROC_COLOUR_UPDATE        :REM E/e
IF K%=68 OR K%=100 THEN CLXS=7  : PROC_COLOUR_UPDATE        :REM D/d
IF K%=67 OR K%=99  THEN CLXS=8  : PROC_COLOUR_UPDATE        :REM C/c
IF K%=82 OR K%=114 THEN CLXS=9  : PROC_COLOUR_UPDATE        :REM R/r
IF K%=70 OR K%=102 THEN CLXS=10 : PROC_COLOUR_UPDATE        :REM F/f
IF K%=86 OR K%=118 THEN CLXS=11 : PROC_COLOUR_UPDATE        :REM V/v
IF K%=84 OR K%=116 THEN CLXS=12 : PROC_COLOUR_UPDATE        :REM T/t
IF K%=71 OR K%=103 THEN CLXS=13 : PROC_COLOUR_UPDATE        :REM G/g
IF K%=66 OR K%=98  THEN CLXS=14 : PROC_COLOUR_UPDATE        :REM B/b
IF K%=89 OR K%=121 THEN CLXS=15 : PROC_COLOUR_UPDATE        :REM Y/y
IF K%=72 OR K%=104 THEN CLXS=16 : PROC_COLOUR_UPDATE        :REM H/h
IF K%=78 OR K%=110 THEN CLXS=17 : PROC_COLOUR_UPDATE        :REM N/n
IF K%=75 OR K%=107 THEN INPUT CLP$ : PROC_SET_COLOUR_UPDATE :REM K/k SET COLOURS
IF K%=76 OR K%=108 THEN PROC_Options : GOTO """OPTIONS-LOOP"""   :REM L/l TO Options
GOTO """QOLOUR-LOOP"""
REM -------QAME-LOOP-------
REPEAT
K%=INKEY(0)
IF K%=122 OR K%=90 THEN PROC_LEFT    :REM Z/z
IF K%=120 OR K%=88 THEN PROC_RIGHT   :REM X/x
IF K%=111 OR K%=79 THEN PROC_ROTATE  :REM O/o
IF K%=112 OR K%=80 THEN PROC_DROP    :REM P/p
IF K%=76 OR K%=108 THEN LEAVE=TRUE   :REM TO LEAVE
IF TIME>=RATE% THEN TIME=0 : PROC_DOWN
REPEAT UNTIL TIME>=T%+1
UNTIL LEAVE
GOTO """QETURN"""
REM -------PROGRAM-ENDS-------
END
REM -------PROGRAM-DEFS-------
DEF PROC_Start
PROC_RESET
PROC_UI
PROC_NEXTBLOCK
ENDPROC
DEF PROC_LEFT
FOR SX=0 TO 3:FOR SY=0 TO 3:TMP$=SETHB$(R,SX,SY):IF TMP$=BL$:IF TMP$=SCREEN$(SX+X,SY+Y) THEN COL=TRUE :REM Collision Check
NEXT SY:NEXT SX
IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R):X=X-1:PRINTTAB(X+14,Y+3)SET$(R):ENDPROC:REM Collision Failed
COL=FALSE
ENDPROC
DEF PROC_RIGHT
FOR SX=0 TO 3:FOR SY=0 TO 3:TMP$=SETHB$(R,SX,SY):IF TMP$=BL$:IF TMP$=SCREEN$(SX+X+2,SY+Y) THEN COL=TRUE :REM Collision Check
NEXT SY:NEXT SX
IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R):X=X+1:PRINTTAB(X+14,Y+3)SET$(R):ENDPROC:REM Collision Failed
COL=FALSE
ENDPROC
DEF PROC_ROTATE
TR=R+1 : IF TR>3 THEN TR=0
FOR SX=0 TO 3:FOR SY=0 TO 3:TMP$=SETHB$(TR,SX,SY):IF TMP$=BL$:IF TMP$=SCREEN$(SX+X+1,SY+Y) THEN COL=TRUE :REM Collision Check
NEXT SY:NEXT SX
IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R):R=TR:PRINTTAB(X+14,Y+3)SET$(R):ENDPROC:REM Collision Failed
COL=FALSE
ENDPROC
DEF PROC_DOWN
FOR SX=0 TO 3:FOR SY=0 TO 3:TMP$=SETHB$(R,SX,SY):IF TMP$=BL$:IF TMP$=SCREEN$(SX+X+1,SY+Y+1) THEN COL=TRUE :REM Collision Check
NEXT SY : NEXT SX
IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R):Y=Y+1:PRINTTAB(X+14,Y+3)SET$(R) :REM Collision Failed
IF COL=TRUE THEN SCORE%=SCORE%+5:FOR SX=0 TO 3:FOR SY=0 TO 3:SCREEN$(SX+X+1,SY+Y)=SCREEN$(SX+X+1,SY+Y)+SETHB$(R,SX,SY):NEXT SY:NEXT SX:PROC_NEXTBLOCK:COL=FALSE :REM Collision Successful
IF COL=TRUE THEN PROC_CHECKREMOVELINE
ENDPROC
DEF PROC_CHECKREMOVELINE
COL=TRUE : THISREMOVEDLINE%=0 :REM CHECK FOR LINE IS FULL AND SAVING WHAT LINE IS TO BE REMOVED
FOR YA=17 TO 0 STEP -1
FOR XA=0 TO 10
IF COL=TRUE THEN IF SCREEN$(XA+1,YA)<>BL$ THEN COL=FALSE
NEXT XA
IF COL=TRUE THEN IF THISREMOVEDLINE%<YA THEN THISREMOVEDLINE%=YA
CRLP=TRUE : NEXT YA
IF THISREMOVEDLINE%<>0 THEN SCORE%=SCORE%+35 : PROC_REMOVELINE
ENDPROC
DEF PROC_REMOVELINE
FOR YA=THISREMOVEDLINE% TO 1 STEP -1
FOR XA=0 TO 10
SCREEN$(XA+1,YA)=SCREEN$(XA+1,YA-1)
NEXT XA
NEXT YA
FOR SX=1 TO 11 : FOR SY=0 TO 17 : PRINTTAB(SX+13,SY+3) NBL$ : PRINTTAB(SX+13,SY+3) SCREEN$(SX,SY) : NEXT SY : NEXT SX  
PRINTTAB(29,4)CHR$(135)"SCORE:"; SCORE%
PROC_CHECKREMOVELINE
ENDPROC
DEF PROC_UI
CLS
FOR W=3 TO 20 : PRINTTAB(12,W)BL$ : NEXT W            :REM LEFT WALL RENDER
FOR W=3 TO 20 : PRINTTAB(26,W)BL$ : NEXT W            :REM RIGHT WALL RENDER
FOR W=12 TO 26 : PRINTTAB(W,21)BL$ : NEXT W           :REM BOTTOM WALL RENDER
FOR W=3 TO 21 : PRINTTAB(11,W)GR$ : NEXT W            :REM LEFT AND BOTTOM GRAPHICS RENDER 
FOR W=3 TO 20 : PRINTTAB(25,W)GR$ : NEXT W            :REM RIGHT GRAPHICS RENDER 
FOR SCL=0 TO 17 : PRINTTAB(13,SCL+3)CL$(SCL):NEXT SCL :REM COLOURS RENDER
FOR W=6 TO 11 : PRINTTAB(30,W)BL$ : NEXT W            :REM LEFT WALL NEXT RENDER 
FOR W=6 TO 11 : PRINTTAB(37,W)BL$ : NEXT W            :REM RIGHT WALL NEXT RENDER 
FOR W=30 TO 37 : PRINTTAB(W,12)BL$ : NEXT W           :REM BOTTOM WALL NEXT RENDER
FOR W=6 TO 10 : PRINTTAB(36,W)GR$ : NEXT W            :REM RIGHT GRAPHICS NEXT RENDER
FOR W=6 TO 10 : PRINTTAB(31,W)W$ : NEXT W             :REM LEFT GRAPHICS NEXT RENDER
PRINTTAB(13,0)L$Y$"PEDAIR--O":PRINTTAB(13,1)L$M$"PEDAIR--O" :REM TITLE
PRINTTAB(29,4)W$"SCORE:0" : PRINTTAB(30,13)W$"NEXT :"       :REM SCORE & NEXT TEXT
PRINTTAB(0,6)C$"Controls:"
PRINTTAB(1,8)"Z = LEFT"
PRINTTAB(1,10)"X = RIGHT"
PRINTTAB(1,12)"O = ROTATE"
PRINTTAB(1,14)"P = DROP"
PRINTTAB(1,16)"L = LEAVE"
ENDPROC
DEF PROC_RESET
X=4 : Y=0 : R=RND(4)-1 : SCORE%=0 : RAND%=RND(7)
FOR YA=0 TO 17 : FOR XA=0 TO 10 : SCREEN$(XA+1,YA)=SCREEN$(14,21) : NEXT XA : NEXT YA
ENDPROC
DEF PROC_NEXTBLOCK
IF RAND% = 1 THEN FOR S=0 TO 3 : SET$(S)=OBA$(S) : NSET$(S)=EOBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=OBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM O BLOCK
IF RAND% = 2 THEN FOR S=0 TO 3 : SET$(S)=TBA$(S) : NSET$(S)=ETBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=TBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM T BLOCK
IF RAND% = 3 THEN FOR S=0 TO 3 : SET$(S)=SBA$(S) : NSET$(S)=ESBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=SBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM S BLOCK
IF RAND% = 4 THEN FOR S=0 TO 3 : SET$(S)=ZBA$(S) : NSET$(S)=EZBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=ZBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM Z BLOCK
IF RAND% = 5 THEN FOR S=0 TO 3 : SET$(S)=LBA$(S) : NSET$(S)=ELBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=LBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM L BLOCK
IF RAND% = 6 THEN FOR S=0 TO 3 : SET$(S)=JBA$(S) : NSET$(S)=EJBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=JBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM J BLOCK
IF RAND% = 7 THEN FOR S=0 TO 3 : SET$(S)=IBA$(S) : NSET$(S)=EIBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=IBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM I BLOCK
RAND%=RND(7) 
PRINTTAB(32,7)NIT$
IF RAND% = 1 THEN PRINTTAB(32,7)OBA$(0)
IF RAND% = 2 THEN PRINTTAB(32,7)TBA$(0)
IF RAND% = 3 THEN PRINTTAB(32,7)SBA$(0)
IF RAND% = 4 THEN PRINTTAB(32,7)ZBA$(0)
IF RAND% = 5 THEN PRINTTAB(32,7)LBA$(0)
IF RAND% = 6 THEN PRINTTAB(32,7)JBA$(0)
IF RAND% = 7 THEN PRINTTAB(32,7)IBA$(0)
X=4 : Y=0 : R=RND(4)-1
ENDPROC
DEF PROC_SET_COLOUR_UPDATE
IF CLP$="G" THEN CLP$=G$
IF CLP$="Y" THEN CLP$=Y$
IF CLP$="B" THEN CLP$=GL$
IF CLP$="M" THEN CLP$=M$
IF CLP$="C" THEN CLP$=C$
IF CLP$="R" THEN CLP$=R$
IF CLP$<>G$ AND CLP$<>Y$ AND CLP$<>GL$ AND CLP$<>M$ AND CLP$<>C$ AND CLP$<>R$ THEN CLP$=ST$
FOR YA=0 TO 17 : IF CLX$(YA)="X" THEN CL$(YA)=CLP$ : CLX$(YA)=NBL$
NEXT YA
PROC_COLOUR
ENDPROC
DEF PROC_COLOUR_UPDATE
IF CLX$(CLXS)=NBL$ THEN CLX$(CLXS)="X" ELSEIF CLX$(CLXS)="X" THEN CLX$(CLXS)=" "
FOR YA=0 TO 17 : PRINTTAB(16,YA+3)CLX$(YA) : NEXT YA
ENDPROC
DEF PROC_COLOUR
CLS
PRINTTAB(13,0)L$Y$"PEDAIR--O" : PRINTTAB(13,1)L$M$"PEDAIR--O"
FOR SCL=0 TO 17 : PRINTTAB(18,SCL+3)CL$(SCL)BL$ : NEXT SCL
PRINTTAB(22,20)"N":PRINTTAB(22,19)"H":PRINTTAB(22,18)"Y":PRINTTAB(22,17)"B":PRINTTAB(22,16)"G":PRINTTAB(22,15)"T"
PRINTTAB(22,14)"V":PRINTTAB(22,13)"F":PRINTTAB(22,12)"R":PRINTTAB(22,11)"C":PRINTTAB(22,10)"D":PRINTTAB(22,09)"E"
PRINTTAB(22,08)"X":PRINTTAB(22,07)"S":PRINTTAB(22,06)"W":PRINTTAB(22,05)"Z":PRINTTAB(22,04)"A":PRINTTAB(22,03)"Q"
PRINTTAB(2,3)"K - SET" : PRINTTAB(2,5)"L - MAIN MENU"
PRINTTAB(2,8)"W - WHITE" : PRINTTAB(2,10)"G - GREEN"
PRINTTAB(2,12)"Y - YELLO" : PRINTTAB(2,14)"B - BLUE"
PRINTTAB(2,16)"M - MAGENTA" : PRINTTAB(2,18)"C - CYAN"
PRINTTAB(2,20)"R - RED"
ENDPROC
DEF PROC_BlockListPrint
CLS
PRINTTAB(0,0)OBA$(0) ; :PRINT " BLOCK O"
PRINTTAB(20,0)TBA$(0); :PRINT " BLOCK T"
PRINTTAB(0,5)SBA$(0) ; :PRINT " BLOCK S"
PRINTTAB(20,5)ZBA$(0); :PRINT " BLOCK Z"
PRINTTAB(0,10)LBA$(0); :PRINT " BLOCK L"
PRINTTAB(20,10)JBA$(0); :PRINT " BLOCK J"
PRINTTAB(0,15)IBA$(0); :PRINT " BLOCK I"
PRINTTAB(5,21)"L - TO GO BACK TO MAIN MENU"
ENDPROC
DEF PROC_TickRate
CLS
PRINTTAB(13,0)L$Y$"PEDAIR--O" : PRINTTAB(13,1)L$M$"PEDAIR--O"
PRINTTAB(2,3) R$"Difficulty Options for PEDAIR-O:"
PRINTTAB(13,6)"__"
PRINTTAB(2,8)"40 = EASY"
PRINTTAB(2,10)"20 = NORMAL"
PRINTTAB(2,12)"2 = HARD"
PRINTTAB(2,5)" ":INPUT "ENDER SPEED",SPEED%
RATE%=SPEED% : IF SPEED%=0 THEN RATE%=20
ENDPROC
DEF PROC_Options
CLS
PRINTTAB(13,0)L$Y$"PEDAIR--O" : PRINTTAB(13,1)L$M$"PEDAIR--O"
PRINTTAB(2,3) R$"Options for PEDAIR-O:"
PRINTTAB(2,5)"Q - Show a List Of Shapes"
PRINTTAB(2,7)"W - Change Difficulty/Game Speed: "
PRINTTAB(6,8)"The Speed is:" ; :PRINT RATE%
PRINTTAB(2,10)"E - Change Brick Colours: "
PRINTTAB(6,11)"The Colours are: ""Rainbow"""
PRINTTAB(5,21)"L - TO GO BACK TO MAIN MENU"
ENDPROC
DEF PROC_Leave
CLS
PRINTTAB(4,5)"THANK YOU FOR PLAYING MY GAME ^^"
PRINTTAB(9,10)"MAKE BY"; : PRINT R$"Dunvant_Kai"
PRINTTAB(9,20)LBA$(0)
ENDPROC
DEF PROC_Title
CLS
PRINTTAB(9,0) L$Y$"CROESO I PEDAIR-O" : PRINTTAB(9,1)L$M$"CROESO I PEDAIR-O"
PRINTTAB(2,3) R$"Options for PEDAIR-O:" 
PRINTTAB(2,5)"S - Show Game Options"
PRINTTAB(2,7) GL$"Controls:"
PRINTTAB(2,9) "Z - To Move Left"
PRINTTAB(2,11) "X - To Move Right"
PRINTTAB(2,13) "O - To Rotate" : PRINTTAB(2,15) "P - To Drop"
PRINTTAB(2,18) FL$"SPACE" ; :PRINT ST$"- To Start The Game"
PRINTTAB(7,20) "L - To Exit From Game" : PRINTTAB(9,22)"MADE BY" ; : PRINT R$"Dunvant_Kai"
ENDPROC