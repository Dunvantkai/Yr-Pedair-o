    1 MODE 7
    2 REM -------DEFINITIONS-------
    3 BL$=CHR$(255)      :REM BLOCK
    4 NBL$=" "           :REM NO BLOCK
    5 B$=CHR$(8)         :REM CURSOR BACK
    6 F$=CHR$(9)         :REM CURSOR FORWARD
    7 D$=CHR$(10)        :REM CURSOR DOWN
    8 U$=CHR$(11)        :REM CURSOR UP
    9 DIM SET$(3)        :REM SETS CHARACTER BLOCK
   10 DIM NSET$(3)       :REM SETS THE NEGATIVE OF CHARACTER BLOCK
   11 DIM SETHB$(3,3,3)  :REM DEFINES SET BLOCKS HIT BOX
   12 DIM SCREEN$(14,21) :REM SCREEN ARRAY SIZE
   13 X=0 : Y=0 : R=0 : COL=FALSE : THISREMOVEDLINE%=0 :REM PLAYER X,Y,R / COLLISION / CURSOR LINE REMOVE
   14 SCORE%=0 : TIME=0 : T%=TIME : LEAVE=FALSE :REM SCORE / TIME / DELAY TIME / LEAVE
   15 RATE%=20                                  :REM SET CLOCK TICK RATE
   16 REM -------COLOUR-DEFINITIONS-------
   17 L$=CHR$(141) : ST$=CHR$(137): FL$=CHR$(136):REM L$-D-HEIGHT / ST$-STEADY / FL$-BLINK
   18 GR$=CHR$(145): W$=CHR$(135)                :REM GR$-G-RED   / W$-T-WHITE /
   19 Y$=CHR$(131) : GL$=CHR$(132): M$=CHR$(133) :REM Y$-T-YELLOW / GL$-T-BLUE / M$-T-MAGENTA
   20 C$=CHR$(134) : G$=CHR$(130) : R$=CHR$(129) :REM C$-T-CYAN   / G$-T-GREEN / R$-T-RED
   21 DIM CL$(17)  :DIM CLX$(17) : CLXS=0 : CLP$="NA" :REM COLOUR SET
   22 REM -------ARENA-WALLS-N-CLS-NEXT-BLOCK-------
   23 FOR YA=0 TO 21 : SCREEN$(11,YA)=BL$ : NEXT YA
   24 FOR XA=0 TO 10 : SCREEN$(XA,18)=BL$ : NEXT XA
   25 FOR SCL=0 TO 4  : CL$(SCL)=G$ : NEXT SCL
   26 FOR SCL=5 TO 8  : CL$(SCL)=Y$ : NEXT SCL
   27 FOR SCL=9 TO 12 : CL$(SCL)=GL$: NEXT SCL
   28 FOR SCL=13 TO 17: CL$(SCL)=M$ : NEXT SCL
   29 FOR SCL=0 TO 17 : CLX$(SCL)=" ": NEXT SCL
   30 NIT$=NBL$+NBL$+NBL$+NBL$+D$+B$+B$+B$+B$+NBL$+NBL$+NBL$+NBL$+D$+B$+B$+B$+B$+NBL$+NBL$+NBL$+NBL$+D$+B$+B$+B$+B$+NBL$+NBL$+NBL$+NBL$
   31 REM -------BLOCK-DEFINITIONS-------
   32 DIM OBA$(3) :REM O BLOCK
   33 OBA$(0)=BL$+BL$+D$+B$+B$+BL$+BL$
   34 OBA$(1)=BL$+BL$+D$+B$+B$+BL$+BL$             :REM LOOP 01
   35 OBA$(2)=BL$+BL$+D$+B$+B$+BL$+BL$             :REM LOOP 02
   36 OBA$(3)=BL$+BL$+D$+B$+B$+BL$+BL$             :REM LOOP 03
   37 DIM IBA$(3) :REM I BLOCK
   38 IBA$(0)=BL$+D$+B$+BL$+D$+B$+BL$+D$+B$+BL$
   39 IBA$(1)=BL$+BL$+BL$+BL$
   40 IBA$(2)=BL$+D$+B$+BL$+D$+B$+BL$+D$+B$+BL$    :REM LOOP 01
   41 IBA$(3)=BL$+BL$+BL$+BL$                      :REM LOOP 02
   42 DIM SBA$(3) :REM S BLOCK
   43 SBA$(0)=F$+BL$+BL$+D$+B$+B$+B$+BL$+BL$+F$
   44 SBA$(1)=BL$+D$+B$+BL$+BL$+D$+B$+BL$
   45 SBA$(2)=F$+BL$+BL$+D$+B$+B$+B$+BL$+BL$+F$    :REM LOOP 01
   46 SBA$(3)=BL$+D$+B$+BL$+BL$+D$+B$+BL$          :REM LOOP 02
   47 DIM ZBA$(3) :REM Z BLOCK
   48 ZBA$(0)=BL$+BL$+D$+B$+B$+F$+BL$+BL$
   49 ZBA$(1)=F$+BL$+D$+B$+B$+BL$+BL$+D$+B$+B$+BL$
   50 ZBA$(2)=BL$+BL$+D$+B$+B$+F$+BL$+BL$          :REM LOOP 01
   51 ZBA$(3)=F$+BL$+D$+B$+B$+BL$+BL$+D$+B$+B$+BL$ :REM LOOP 02
   52 DIM LBA$(3) :REM L BLOCK
   53 LBA$(0)=BL$+D$+B$+BL$+D$+B$+BL$+BL$
   54 LBA$(1)=BL$+BL$+BL$+D$+B$+B$+B$+BL$
   55 LBA$(2)=BL$+BL$+D$+B$+BL$+D$+B$+BL$
   56 LBA$(3)=F$+F$+BL$+D$+B$+B$+B$+BL$+BL$+BL$
   57 DIM JBA$(3) :REM J BLOCK
   58 JBA$(0)=F$+BL$+D$+B$+BL$+D$+B$+B$+BL$+BL$
   59 JBA$(1)=BL$+D$+B$+BL$+BL$+BL$
   60 JBA$(2)=BL$+BL$+D$+B$+B$+BL$+D$+B$+BL$
   61 JBA$(3)=BL$+BL$+BL$+D$+B$+BL$
   62 DIM TBA$(3) :REM T BLOCK
   63 TBA$(0)=BL$+BL$+BL$+D$+B$+B$+BL$
   64 TBA$(1)=F$+BL$+D$+B$+B$+BL$+BL$+D$+B$+BL$
   65 TBA$(2)=F$+BL$+D$+B$+B$+BL$+BL$+BL$
   66 TBA$(3)=BL$+D$+B$+BL$+BL$+D$+B$+B$+BL$
   67 PRINT"GRAPHIC BLOCKS DEFINED"
   68 REM -------EMPTY-BLOCK-DEFINITIONS-------
   69 DIM EOBA$(3) :REM EMPTY O BLOCK
   70 EOBA$(0)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$
   71 EOBA$(1)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$             :REM LOOP 01
   72 EOBA$(2)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$             :REM LOOP 02
   73 EOBA$(3)=NBL$+NBL$+D$+B$+B$+NBL$+NBL$             :REM LOOP 03
   74 DIM EIBA$(3) :REM EMPTY I BLOCK
   75 EIBA$(0)=NBL$+D$+B$+NBL$+D$+B$+NBL$+D$+B$+NBL$
   76 EIBA$(1)=NBL$+NBL$+NBL$+NBL$
   77 EIBA$(2)=NBL$+D$+B$+NBL$+D$+B$+NBL$+D$+B$+NBL$    :REM LOOP 01
   78 EIBA$(3)=NBL$+NBL$+NBL$+NBL$                      :REM LOOP 02
   79 DIM ESBA$(3) :REM EMPTY S BLOCK
   80 ESBA$(0)=F$+NBL$+NBL$+D$+B$+B$+B$+NBL$+NBL$+F$
   81 ESBA$(1)=NBL$+D$+B$+NBL$+NBL$+D$+B$+NBL$
   82 ESBA$(2)=F$+NBL$+NBL$+D$+B$+B$+B$+NBL$+NBL$+F$    :REM LOOP 01
   83 ESBA$(3)=NBL$+D$+B$+NBL$+NBL$+D$+B$+NBL$          :REM LOOP 02
   84 DIM EZBA$(3) :REM EMPTY Z BLOCK
   85 EZBA$(0)=NBL$+NBL$+D$+B$+B$+F$+NBL$+NBL$
   86 EZBA$(1)=F$+NBL$+D$+B$+B$+NBL$+NBL$+D$+B$+B$+NBL$
   87 EZBA$(2)=NBL$+NBL$+D$+B$+B$+F$+NBL$+NBL$          :REM LOOP 01
   88 EZBA$(3)=F$+NBL$+D$+B$+B$+NBL$+NBL$+D$+B$+B$+NBL$ :REM LOOP 02
   89 DIM ELBA$(3) :REM EMPTY L BLOCK
   90 ELBA$(0)=NBL$+D$+B$+NBL$+D$+B$+NBL$+NBL$
   91 ELBA$(1)=NBL$+NBL$+NBL$+D$+B$+B$+B$+NBL$
   92 ELBA$(2)=NBL$+NBL$+D$+B$+NBL$+D$+B$+NBL$
   93 ELBA$(3)=F$+F$+NBL$+D$+B$+B$+B$+NBL$+NBL$+NBL$
   94 DIM EJBA$(3) :REM EMPTY J BLOCK
   95 EJBA$(0)=F$+NBL$+D$+B$+NBL$+D$+B$+B$+NBL$+NBL$
   96 EJBA$(1)=NBL$+D$+B$+NBL$+NBL$+NBL$
   97 EJBA$(2)=NBL$+NBL$+D$+B$+B$+NBL$+D$+B$+NBL$
   98 EJBA$(3)=NBL$+NBL$+NBL$+D$+B$+NBL$
   99 DIM ETBA$(3) :REM EMPTY T BLOCK
  100 ETBA$(0)=NBL$+NBL$+NBL$+D$+B$+B$+NBL$
  101 ETBA$(1)=F$+NBL$+D$+B$+B$+NBL$+NBL$+D$+B$+NBL$
  102 ETBA$(2)=F$+NBL$+D$+B$+B$+NBL$+NBL$+NBL$
  103 ETBA$(3)=NBL$+D$+B$+NBL$+NBL$+D$+B$+B$+NBL$
  104 DIM OBAH$(3,3,3) :REM I BLOCK HIT BOX
  105 PRINT"EMPTY GRAPHIC BLOCKS DEFINED"
  106 REM -------HITBOX-DEFINITIONS-------
  107 OBAH$(0,0,0)=BL$ :OBAH$(0,1,0)=BL$ :OBAH$(0,0,1)=BL$ :OBAH$(0,1,1)=BL$
  108 OBAH$(1,0,0)=BL$ :OBAH$(1,1,0)=BL$ :OBAH$(1,0,1)=BL$ :OBAH$(1,1,1)=BL$  :REM LOOP 01
  109 OBAH$(2,0,0)=BL$ :OBAH$(2,1,0)=BL$ :OBAH$(2,0,1)=BL$ :OBAH$(2,1,1)=BL$  :REM LOOP 02
  110 OBAH$(3,0,0)=BL$ :OBAH$(3,1,0)=BL$ :OBAH$(3,0,1)=BL$ :OBAH$(3,1,1)=BL$  :REM LOOP 03
  111 DIM IBAH$(3,3,3) :REM I BLOCK HIT BOX
  112 IBAH$(0,0,0)=BL$ :IBAH$(0,0,1)=BL$ :IBAH$(0,0,2)=BL$ :IBAH$(0,0,3)=BL$
  113 IBAH$(1,0,0)=BL$ :IBAH$(1,1,0)=BL$ :IBAH$(1,2,0)=BL$ :IBAH$(1,3,0)=BL$
  114 IBAH$(2,0,0)=BL$ :IBAH$(2,0,1)=BL$ :IBAH$(2,0,2)=BL$ :IBAH$(2,0,3)=BL$  :REM LOOP 01
  115 IBAH$(3,0,0)=BL$ :IBAH$(3,1,0)=BL$ :IBAH$(3,2,0)=BL$ :IBAH$(3,3,0)=BL$  :REM LOOP 02
  116 DIM SBAH$(3,3,3) :REM S BLOCK HIT BOX
  117 SBAH$(0,1,0)=BL$ :SBAH$(0,2,0)=BL$ :SBAH$(0,0,1)=BL$ :SBAH$(0,1,1)=BL$
  118 SBAH$(1,0,0)=BL$ :SBAH$(1,0,1)=BL$ :SBAH$(1,1,1)=BL$ :SBAH$(1,1,2)=BL$
  119 SBAH$(2,1,0)=BL$ :SBAH$(2,2,0)=BL$ :SBAH$(2,0,1)=BL$ :SBAH$(2,1,1)=BL$  :REM LOOP 01
  120 SBAH$(3,0,0)=BL$ :SBAH$(3,0,1)=BL$ :SBAH$(3,1,1)=BL$ :SBAH$(3,1,2)=BL$  :REM LOOP 02
  121 DIM ZBAH$(3,3,3) :REM Z BLOCK HIT BOX
  122 ZBAH$(0,0,0)=BL$ :ZBAH$(0,1,0)=BL$ :ZBAH$(0,1,1)=BL$ :ZBAH$(0,2,1)=BL$
  123 ZBAH$(1,1,0)=BL$ :ZBAH$(1,0,1)=BL$ :ZBAH$(1,1,1)=BL$ :ZBAH$(1,0,2)=BL$
  124 ZBAH$(2,0,0)=BL$ :ZBAH$(2,1,0)=BL$ :ZBAH$(2,1,1)=BL$ :ZBAH$(2,2,1)=BL$  :REM LOOP 01
  125 ZBAH$(3,1,0)=BL$ :ZBAH$(3,0,1)=BL$ :ZBAH$(3,1,1)=BL$ :ZBAH$(3,0,2)=BL$  :REM LOOP 02
  126 DIM LBAH$(3,3,3) :REM L BLOCK HIT BOX
  127 LBAH$(0,0,0)=BL$ :LBAH$(0,0,1)=BL$ :LBAH$(0,0,2)=BL$ :LBAH$(0,1,2)=BL$
  128 LBAH$(1,0,0)=BL$ :LBAH$(1,1,0)=BL$ :LBAH$(1,2,0)=BL$ :LBAH$(1,0,1)=BL$
  129 LBAH$(2,0,0)=BL$ :LBAH$(2,1,0)=BL$ :LBAH$(2,1,1)=BL$ :LBAH$(2,1,2)=BL$
  130 LBAH$(3,2,0)=BL$ :LBAH$(3,0,1)=BL$ :LBAH$(3,1,1)=BL$ :LBAH$(3,2,1)=BL$
  131 DIM JBAH$(3,3,3) :REM J BLOCK HIT BOX
  132 JBAH$(0,1,0)=BL$ :JBAH$(0,1,1)=BL$ :JBAH$(0,0,2)=BL$ :JBAH$(0,1,2)=BL$
  133 JBAH$(1,0,0)=BL$ :JBAH$(1,0,1)=BL$ :JBAH$(1,1,1)=BL$ :JBAH$(1,2,1)=BL$
  134 JBAH$(2,0,0)=BL$ :JBAH$(2,1,0)=BL$ :JBAH$(2,0,1)=BL$ :JBAH$(2,0,2)=BL$
  135 JBAH$(3,0,0)=BL$ :JBAH$(3,1,0)=BL$ :JBAH$(3,2,0)=BL$ :JBAH$(3,2,1)=BL$
  136 DIM TBAH$(3,3,3) :REM T BLOCK HIT BOX
  137 TBAH$(0,0,0)=BL$ :TBAH$(0,1,0)=BL$ :TBAH$(0,2,0)=BL$ :TBAH$(0,1,1)=BL$
  138 TBAH$(1,1,0)=BL$ :TBAH$(1,0,1)=BL$ :TBAH$(1,1,1)=BL$ :TBAH$(1,1,2)=BL$
  139 TBAH$(2,1,0)=BL$ :TBAH$(2,0,1)=BL$ :TBAH$(2,1,1)=BL$ :TBAH$(2,2,1)=BL$
  140 TBAH$(3,0,0)=BL$ :TBAH$(3,0,1)=BL$ :TBAH$(3,1,1)=BL$ :TBAH$(3,0,2)=BL$
  141 PRINT"HIT BOX BLOCKS DEFINED"
  142 REM -------RETURN-------
  143 LEAVE=FALSE
  144 PROC_Title
  145 REM -------TITLE-LOOP-------
  146 K%=INKEY(0)
  147 IF K%=32 THEN PROC_Start : GOTO 181
  148 IF K%=83 OR K%=115 THEN PROC_Options : GOTO 151
  149 IF K%=76 OR K%=108 THEN PROC_Leave : GOTO 193
  150 GOTO 145
  151 REM -------OPTIONS-LOOP-------
  152 K%=INKEY(0)
  153 IF K%=81 OR K%=113 THEN PROC_BlockListPrint : PROC_Options
  154 IF K%=87 OR K%=119 THEN PROC_TickRate
  155 IF K%=69 OR K%=101 THEN PROC_COLOUR : GOTO 158
  156 IF K%=76 OR K%=108 THEN PROC_Title : GOTO 145
  157 GOTO 151
  158 REM -------COLOUR-LOOP-------
  159 K%=INKEY(0)
  160 IF K%=81 OR K%=113 THEN CLXS=0  : PROC_COLOUR_UPDATE        :REM Q/q
  161 IF K%=65 OR K%=97  THEN CLXS=1  : PROC_COLOUR_UPDATE        :REM A/a
  162 IF K%=90 OR K%=122 THEN CLXS=2  : PROC_COLOUR_UPDATE        :REM Z/z
  163 IF K%=87 OR K%=119 THEN CLXS=3  : PROC_COLOUR_UPDATE        :REM W/w
  164 IF K%=83 OR K%=115 THEN CLXS=4  : PROC_COLOUR_UPDATE        :REM S/s
  165 IF K%=88 OR K%=120 THEN CLXS=5  : PROC_COLOUR_UPDATE        :REM X/x
  166 IF K%=69 OR K%=101 THEN CLXS=6  : PROC_COLOUR_UPDATE        :REM E/e
  167 IF K%=68 OR K%=100 THEN CLXS=7  : PROC_COLOUR_UPDATE        :REM D/d
  168 IF K%=67 OR K%=99  THEN CLXS=8  : PROC_COLOUR_UPDATE        :REM C/c
  169 IF K%=82 OR K%=114 THEN CLXS=9  : PROC_COLOUR_UPDATE        :REM R/r
  170 IF K%=70 OR K%=102 THEN CLXS=10 : PROC_COLOUR_UPDATE        :REM F/f
  171 IF K%=86 OR K%=118 THEN CLXS=11 : PROC_COLOUR_UPDATE        :REM V/v
  172 IF K%=84 OR K%=116 THEN CLXS=12 : PROC_COLOUR_UPDATE        :REM T/t
  173 IF K%=71 OR K%=103 THEN CLXS=13 : PROC_COLOUR_UPDATE        :REM G/g
  174 IF K%=66 OR K%=98  THEN CLXS=14 : PROC_COLOUR_UPDATE        :REM B/b
  175 IF K%=89 OR K%=121 THEN CLXS=15 : PROC_COLOUR_UPDATE        :REM Y/y
  176 IF K%=72 OR K%=104 THEN CLXS=16 : PROC_COLOUR_UPDATE        :REM H/h
  177 IF K%=78 OR K%=110 THEN CLXS=17 : PROC_COLOUR_UPDATE        :REM N/n
  178 IF K%=75 OR K%=107 THEN INPUT CLP$ : PROC_SET_COLOUR_UPDATE :REM K/k SET COLOURS
  179 IF K%=76 OR K%=108 THEN PROC_Options : GOTO 151   :REM L/l TO Options
  180 GOTO 158
  181 REM -------GAME-LOOP-------
  182 REPEAT
  183 K%=INKEY(0)
  184 IF K%=122 OR K%=90 THEN PROC_LEFT    :REM Z/z
  185 IF K%=120 OR K%=88 THEN PROC_RIGHT   :REM X/x
  186 IF K%=111 OR K%=79 THEN PROC_ROTATE  :REM O/o
  187 IF K%=112 OR K%=80 THEN PROC_DROP    :REM P/p
  188 IF K%=76 OR K%=108 THEN LEAVE=TRUE   :REM TO LEAVE
  189 REPEAT UNTIL TIME>=T%+5
  190 IF TIME>=RATE% THEN TIME=0 : PROC_DOWN
  191 UNTIL LEAVE
  192 GOTO 145
  193 REM -------PROGRAM-ENDS-------
  194 END
  195 REM -------PROGRAM-DEFS-------
  196 DEF PROC_Start
  197 PROC_RESET
  198 PROC_UI
  199 PROC_NEXTBLOCK
  200 ENDPROC
  201 DEF PROC_LEFT
  202 COL=FALSE
  203 IF X-1 < 0 THEN ENDPROC :REM Hard Collision Check
  204 FOR SX=0 TO 3 : FOR SY=0 TO 3 : IF COL=FALSE THEN IF SETHB$(R,SX,SY) = BL$ : IF SETHB$(R,SX,SY) = SCREEN$(SX+X-1,SY+Y) THEN COL=TRUE :REM Collision Check
  205 NEXT SY : NEXT SX
  206 IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R) : X=X-1 : PRINTTAB(X+14,Y+3)SET$(R) :REM Collision Failed
  207 ENDPROC
  208 DEF PROC_RIGHT
  209 COL=FALSE
  210 IF X+1 > 10 THEN ENDPROC :REM Hard Collision Check
  211 FOR SX=0 TO 3 : FOR SY=0 TO 3 : IF COL=FALSE THEN IF SETHB$(R,SX,SY) = BL$ : IF SETHB$(R,SX,SY) = SCREEN$(SX+X+1,SY+Y) THEN COL=TRUE :REM Collision Check
  212 NEXT SY : NEXT SX
  213 IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R) : X=X+1 : PRINTTAB(X+14,Y+3)SET$(R) :REM Collision Failed
  214 ENDPROC
  215 DEF PROC_ROTATE
  216 COL=FALSE : TR=R+1 : IF TR>3 THEN TR=0
  217 FOR SX=0 TO 3 : FOR SY=0 TO 3 : IF COL=FALSE : IF SETHB$(TR,SX,SY) = BL$ : IF SETHB$(TR,SX,SY) = SCREEN$(SX+X,SY+Y) THEN COL=TRUE :REM Collision Check
  218 NEXT SY : NEXT SX
  219 IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R) : R=TR : PRINTTAB(X+14,Y+3)SET$(R) :REM Collision Failed
  220 ENDPROC
  221 DEF PROC_DOWN
  222 COL=FALSE
  223 FOR SX=0 TO 3 : FOR SY=0 TO 3 : IF COL=FALSE : IF SETHB$(R,SX,SY) = BL$ : IF SETHB$(R,SX,SY) = SCREEN$(SX+X,SY+Y+1) THEN COL=TRUE :REM Collision Check
  224 NEXT SY : NEXT SX
  225 IF COL=FALSE THEN PRINTTAB(X+14,Y+3)NSET$(R) : Y=Y+1 : PRINTTAB(X+14,Y+3)SET$(R) :REM Collision Failed
  226 IF COL=TRUE THEN SCORE%=SCORE%+5 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SCREEN$(SX+X,SY+Y)=SCREEN$(SX+X,SY+Y)+SETHB$(R,SX,SY) : NEXT SY : NEXT SX : PROC_NEXTBLOCK :REM Collision Successful
  227 ENDPROC
  228 DEF PROC_UI
  229 CLS
  230 FOR W=3 TO 20 : PRINTTAB(12,W)BL$ : NEXT W            :REM LEFT WALL RENDER
  231 FOR W=3 TO 20 : PRINTTAB(26,W)BL$ : NEXT W            :REM RIGHT WALL RENDER
  232 FOR W=12 TO 26 : PRINTTAB(W,21)BL$ : NEXT W           :REM BOTTOM WALL RENDER
  233 FOR W=3 TO 21 : PRINTTAB(11,W)GR$ : NEXT W            :REM LEFT AND BOTTOM GRAPHICS RENDER
  234 FOR W=3 TO 20 : PRINTTAB(25,W)GR$ : NEXT W            :REM RIGHT GRAPHICS RENDER
  235 FOR SCL=0 TO 17 : PRINTTAB(13,SCL+3)CL$(SCL):NEXT SCL :REM COLOURS RENDER
  236 FOR W=6 TO 11 : PRINTTAB(30,W)BL$ : NEXT W            :REM LEFT WALL NEXT RENDER
  237 FOR W=6 TO 11 : PRINTTAB(37,W)BL$ : NEXT W            :REM RIGHT WALL NEXT RENDER
  238 FOR W=30 TO 37 : PRINTTAB(W,12)BL$ : NEXT W           :REM BOTTOM WALL NEXT RENDER
  239 FOR W=6 TO 10 : PRINTTAB(36,W)GR$ : NEXT W            :REM RIGHT GRAPHICS NEXT RENDER
  240 FOR W=6 TO 10 : PRINTTAB(31,W)W$ : NEXT W             :REM LEFT GRAPHICS NEXT RENDER
  241 PRINTTAB(13,0)L$Y$"PEDAIR--O":PRINTTAB(13,1)L$M$"PEDAIR--O" :REM TITLE
  242 PRINTTAB(29,4)W$"SCORE:0" : PRINTTAB(30,13)W$"NEXT :"       :REM SCORE & NEXT TEXT
  243 PRINTTAB(0,6)C$"Controls:"
  244 PRINTTAB(1,8)"Z = LEFT"
  245 PRINTTAB(1,10)"X = RIGHT"
  246 PRINTTAB(1,12)"O = ROTATE"
  247 PRINTTAB(1,14)"P = DROP"
  248 PRINTTAB(1,16)"L = LEAVE"
  249 ENDPROC
  250 DEF PROC_RESET
  251 X=4 : Y=0 : R=RND(4)-1 : SCORE%=0 : RAND%=RND(7)
  252 FOR YA=0 TO 17 : FOR XA=0 TO 10 : SCREEN$(XA,YA)=SCREEN$(14,21) : NEXT XA : NEXT YA
  253 ENDPROC
  254 DEF PROC_NEXTBLOCK
  255 IF RAND% = 1 THEN CLS : FOR S=0 TO 3 : SET$(S)=OBA$(S) : NSET$(S)=EOBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=OBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM O BLOCK
  256 IF RAND% = 2 THEN CLS : FOR S=0 TO 3 : SET$(S)=TBA$(S) : NSET$(S)=ETBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=TBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM T BLOCK
  257 IF RAND% = 3 THEN CLS : FOR S=0 TO 3 : SET$(S)=SBA$(S) : NSET$(S)=ESBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=SBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM S BLOCK
  258 IF RAND% = 4 THEN CLS : FOR S=0 TO 3 : SET$(S)=ZBA$(S) : NSET$(S)=EZBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=ZBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM Z BLOCK
  259 IF RAND% = 5 THEN CLS : FOR S=0 TO 3 : SET$(S)=LBA$(S) : NSET$(S)=ELBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=LBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM L BLOCK
  260 IF RAND% = 6 THEN CLS : FOR S=0 TO 3 : SET$(S)=JBA$(S) : NSET$(S)=EJBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=JBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM J BLOCK
  261 IF RAND% = 7 THEN CLS : FOR S=0 TO 3 : SET$(S)=IBA$(S) : NSET$(S)=EIBA$(S) : NEXT S : FOR Z=0 TO 3 : FOR SX=0 TO 3 : FOR SY=0 TO 3 : SETHB$(Z,SX,SY)=IBAH$(Z,SX,SY) :NEXT SY :NEXT SX :NEXT Z :REM I BLOCK
  262 RAND%=RND(7)
  263 PRINTTAB(32,7)NIT$
  264 IF RAND% = 1 THEN PRINTTAB(32,7)OBA$(0)
  265 IF RAND% = 2 THEN PRINTTAB(32,7)TBA$(0)
  266 IF RAND% = 3 THEN PRINTTAB(32,7)SBA$(0)
  267 IF RAND% = 4 THEN PRINTTAB(32,7)ZBA$(0)
  268 IF RAND% = 5 THEN PRINTTAB(32,7)LBA$(0)
  269 IF RAND% = 6 THEN PRINTTAB(32,7)JBA$(0)
  270 IF RAND% = 7 THEN PRINTTAB(32,7)IBA$(0)
  271 X=4 : Y=0 : R=RND(4)-1
  272 ENDPROC
  273 DEF PROC_SET_COLOUR_UPDATE
  274 IF CLP$="G" THEN CLP$=G$
  275 IF CLP$="Y" THEN CLP$=Y$
  276 IF CLP$="B" THEN CLP$=GL$
  277 IF CLP$="M" THEN CLP$=M$
  278 IF CLP$="C" THEN CLP$=C$
  279 IF CLP$="R" THEN CLP$=R$
  280 IF CLP$<>G$ AND CLP$<>Y$ AND CLP$<>GL$ AND CLP$<>M$ AND CLP$<>C$ AND CLP$<>R$ THEN CLP$=ST$
  281 FOR YA=0 TO 17 : IF CLX$(YA)="X" THEN CL$(YA)=CLP$ : CLX$(YA)=NBL$
  282 NEXT YA
  283 PROC_COLOUR
  284 ENDPROC
  285 DEF PROC_COLOUR_UPDATE
  286 IF CLX$(CLXS)=NBL$ THEN CLX$(CLXS)="X" ELSEIF CLX$(CLXS)="X" THEN CLX$(CLXS)=NBL$
  287 FOR YA=0 TO 17 : PRINTTAB(16,YA+3)CLX$(YA) : NEXT YA
  288 ENDPROC
  289 DEF PROC_COLOUR
  290 CLS
  291 PRINTTAB(13,0)L$Y$"PEDAIR--O" : PRINTTAB(13,1)L$M$"PEDAIR--O"
  292 FOR SCL=0 TO 17 : PRINTTAB(18,SCL+3)CL$(SCL)BL$ : NEXT SCL
  293 PRINTTAB(22,20)"N":PRINTTAB(22,19)"H":PRINTTAB(22,18)"Y":PRINTTAB(22,17)"B":PRINTTAB(22,16)"G":PRINTTAB(22,15)"T"
  294 PRINTTAB(22,14)"V":PRINTTAB(22,13)"F":PRINTTAB(22,12)"R":PRINTTAB(22,11)"C":PRINTTAB(22,10)"D":PRINTTAB(22,09)"E"
  295 PRINTTAB(22,08)"X":PRINTTAB(22,07)"S":PRINTTAB(22,06)"W":PRINTTAB(22,05)"Z":PRINTTAB(22,04)"A":PRINTTAB(22,03)"Q"
  296 PRINTTAB(2,3)"K - SET" : PRINTTAB(2,5)"L - MAIN MENU"
  297 PRINTTAB(2,8)"W - WHITE" : PRINTTAB(2,10)"G - GREEN"
  298 PRINTTAB(2,12)"Y - YELLO" : PRINTTAB(2,14)"B - BLUE"
  299 PRINTTAB(2,16)"M - MAGENTA" : PRINTTAB(2,18)"C - CYAN"
  300 PRINTTAB(2,20)"R - RED"
  301 ENDPROC
  302 DEF PROC_BlockListPrint
  303 CLS
  304 PRINTTAB(0,0)OBA$(0) ; :PRINT " BLOCK O"
  305 PRINTTAB(20,0)TBA$(0); :PRINT " BLOCK T"
  306 PRINTTAB(0,5)SBA$(0) ; :PRINT " BLOCK S"
  307 PRINTTAB(20,5)ZBA$(0); :PRINT " BLOCK Z"
  308 PRINTTAB(0,10)LBA$(0); :PRINT " BLOCK L"
  309 PRINTTAB(20,10)JBA$(0); :PRINT " BLOCK J"
  310 PRINTTAB(0,15)IBA$(0); :PRINT " BLOCK I"
  311 PRINTTAB(5,21)"L - TO GO BACK TO MAIN MENU"
  312 ENDPROC
  313 DEF PROC_TickRate
  314 CLS
  315 PRINTTAB(13,0)L$Y$"PEDAIR--O" : PRINTTAB(13,1)L$M$"PEDAIR--O"
  316 PRINTTAB(2,3) R$"Difficulty Options for PEDAIR-O:"
  317 PRINTTAB(13,6)"__"
  318 PRINTTAB(2,8)"40 = EASY"
  319 PRINTTAB(2,10)"20 = NORMAL"
  320 PRINTTAB(2,12)"2 = HARD"
  321 PRINTTAB(2,5)" ":INPUT "ENDER SPEED",SPEED%
  322 RATE%=SPEED% : IF SPEED%=0 THEN RATE%=20
  323 ENDPROC
  324 DEF PROC_Options
  325 CLS
  326 PRINTTAB(13,0)L$Y$"PEDAIR--O" : PRINTTAB(13,1)L$M$"PEDAIR--O"
  327 PRINTTAB(2,3) R$"Options for PEDAIR-O:"
  328 PRINTTAB(2,5)"Q - Show a List Of Shapes"
  329 PRINTTAB(2,7)"W - Change Difficulty/Game Speed: "
  330 PRINTTAB(6,8)"The Speed is:" ; :PRINT RATE%
  331 PRINTTAB(2,10)"E - Change Brick Colours: "
  332 PRINTTAB(6,11)"The Colours are: ""Rainbow"""
  333 PRINTTAB(5,21)"L - TO GO BACK TO MAIN MENU"
  334 ENDPROC
  335 DEF PROC_Leave
  336 CLS
  337 PRINTTAB(4,5)"THANK YOU FOR PLAYING MY GAME ^^"
  338 PRINTTAB(9,10)"MAKE BY"; : PRINT R$"Dunvant_Kai"
  339 PRINTTAB(9,20)LBA$(0)
  340 ENDPROC
  341 DEF PROC_Title
  342 CLS
  343 PRINTTAB(9,0) L$Y$"CROESO I PEDAIR-O" : PRINTTAB(9,1)L$M$"CROESO I PEDAIR-O"
  344 PRINTTAB(2,3) R$"Options for PEDAIR-O:"
  345 PRINTTAB(2,5)"S - Show Game Options"
  346 PRINTTAB(2,7) GL$"Controls:"
  347 PRINTTAB(2,9) "Z - To Move Left"
  348 PRINTTAB(2,11) "X - To Move Right"
  349 PRINTTAB(2,13) "O - To Rotate" : PRINTTAB(2,15) "P - To Drop"
  350 PRINTTAB(2,18) FL$"SPACE" ; :PRINT ST$"- To Start The Game"
  351 PRINTTAB(7,20) "L - To Exit From Game" : PRINTTAB(9,22)"MADE BY" ; : PRINT R$"Dunvant_Kai"
  352 ENDPROC
